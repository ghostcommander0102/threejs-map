{"version":3,"file":"index.umd.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/globals.ts","../src/helpers/misc.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/helpers/draw.logo.helpers.ts","../src/Hooks/useMeshFloors/index.tsx","../src/defaults.ts","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/Map.tsx","../src/components/SceneComponent/FloorsMap.tsx","../src/helpers/camera.helpers.ts","../src/components/UIComponent/FloorSelector.tsx","../src/components/Icons/ATM.tsx","../src/components/Icons/DogPoopStation.tsx","../src/components/Icons/Elevator.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Icons/Management.tsx","../src/components/Icons/PlayArea.tsx","../src/components/Icons/Restroom.tsx","../src/components/Icons/Security.tsx","../src/components/UIComponent/index.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\r\nimport {IFloorData} from \"../../types\";\r\n\r\nexport function next_node_name(node_count: number) {\r\n    return 'node-' + node_count;\r\n}\r\n\r\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\r\n    let exists = false;\r\n    let node_name:string = '-name-not-found-';\r\n    const currentFloor = floors[floor_index];\r\n    if (currentFloor.route_points !== undefined) {\r\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\r\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\r\n                exists = true;\r\n                node_name = currentFloor.route_points[i].name;\r\n                break;\r\n            }\r\n        }\r\n        if (!exists) {\r\n            node_name = next_node_name(node_count);\r\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\r\n        }\r\n    }\r\n    return [node_name, exists];\r\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\r\nimport { SVGResultPaths } from \"three-stdlib\";\r\nimport {Graph} from \"ngraph.graph\";\r\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\r\nimport {get_node_name} from \"./nodesUtils\";\r\nimport {MeshType} from \"./getMaterialAndGeometry\";\r\nimport { IConfig, IFloorData } from \"../../types\";\r\n\r\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\r\n    const consolePrefix = 'MeshParams';\r\n    let mesh_type:MeshType = null;\r\n    var layer_color: Color | string = path.color.clone();\r\n    var extrude = 0;\r\n    var z_index = 0;\r\n    var mesh_visible = true;\r\n    var mesh_draw = true;\r\n    var mesh_transparent = false;\r\n    var line_thickness = config.WALL_THICKNESS;\r\n    var interactiveMesh = true;\r\n    var layer_name = path.userData?.node.id;\r\n    if (layer_name != undefined) {\r\n        if (layer_name.startsWith('boundary')) {\r\n            mesh_type = 'boundary';\r\n            layer_color = config.BOUNDARY_COLOR;\r\n            line_thickness = config.BOUNDARY_THICKNESS;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 9;\r\n            }\r\n        } else if (layer_name.startsWith('wall')) {\r\n            mesh_type = 'wall';\r\n            layer_color = config.WALL_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 8.5;\r\n            }\r\n        } else if (layer_name.startsWith('outer-wall')) {\r\n            mesh_type = 'outer-wall';\r\n            layer_color = config.WALL_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                mesh_draw = false;\r\n            }\r\n        } else if (layer_name.startsWith('building-base')) {\r\n            mesh_type = 'building-base';\r\n            layer_color = config.BUILDING_BASE_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 12;\r\n                z_index = -12;\r\n            }\r\n        } else if (layer_name.startsWith('base')) {\r\n            mesh_type = 'base';\r\n            layer_color = config.BASE_COLOR;\r\n        } else if (layer_name.startsWith('store')) {\r\n            mesh_type = 'store';\r\n            layer_color = config.STORE_DEFAULT_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 8;\r\n            }\r\n            if (layer_name.startsWith('store-underlay')) {\r\n                interactiveMesh = false;\r\n            }\r\n        } else if (layer_name.startsWith('big-store')) {\r\n            mesh_type = 'big-store';\r\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 16;\r\n            }\r\n        } else if (layer_name.startsWith('route-path')) {\r\n            mesh_type = 'route-path';\r\n            mesh_draw = false;\r\n            path.subPaths.forEach(subPath => {\r\n                if (subPath.curves.length == 0) {\r\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\r\n                }\r\n\r\n                subPath.curves.forEach(curve => {\r\n                    //@ts-ignore\r\n                    const v1:Vector2 = curve.v1;\r\n                    //@ts-ignore\r\n                    const v2:Vector2 = curve.v2;\r\n\r\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\r\n                    if (!exists1) {\r\n                        floors[floor_index].route_points?.push({\r\n                            name: node1_name,\r\n                            node: new Vector3(v1.x, v1.y, 1)\r\n                        });\r\n                        allNodesFloor[node1_name] = floor_index;\r\n                    }\r\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\r\n                    if (!exists2) {\r\n                        floors[floor_index].route_points?.push({\r\n                            name: node2_name,\r\n                            node: new Vector3(v2.x, v2.y, 1)\r\n                        });\r\n                        allNodesFloor[node2_name] = floor_index;\r\n                    }\r\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\r\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\r\n\r\n                    // pathFinderGraph.addLink(node1_name, node2_name);\r\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\r\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\r\n                });\r\n            });\r\n        } else if (layer_name.startsWith('escalator-')) {\r\n            mesh_type = 'escalator';\r\n            mesh_visible = false;\r\n        } else if (layer_name.startsWith('kiosk-')) {\r\n            mesh_type = 'kiosk';\r\n            mesh_transparent = true;\r\n        } else if (layer_name.startsWith('amenity-')) {\r\n            mesh_type = 'amenity';\r\n            mesh_transparent = true;\r\n            z_index = 1;\r\n        } else if (layer_name.startsWith('overlay')) {\r\n            mesh_type = 'overlay';\r\n        } else if (layer_name.startsWith('special-shape')) {\r\n            mesh_type = 'special-shape';\r\n        } else {\r\n            extrude = 1;\r\n        }\r\n    } else {\r\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\r\n    }\r\n\r\n\r\n    /*console.debug({\r\n        mesh_type,\r\n        layer_color,\r\n        extrude,\r\n        z_index,\r\n        mesh_visible,\r\n        mesh_draw,\r\n        mesh_transparent,\r\n        line_thickness,\r\n        interactiveMesh,\r\n        path,\r\n        layer_name,\r\n    })*/\r\n    return {\r\n        mesh_type,\r\n        layer_color,\r\n        extrude,\r\n        z_index,\r\n        mesh_visible,\r\n        mesh_draw,\r\n        mesh_transparent,\r\n        line_thickness,\r\n        interactiveMesh,\r\n        path,\r\n        layer_name,\r\n    }\r\n}","import createGraph from \"ngraph.graph\";\nimport {IRetailer, MapObj} from \"./mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\n\nexport const meshByObjectId = new Map<string,Mesh>();\nexport const allMapObjects:string[] = [];\nexport const allIndexedMapObjects = {} as Record<string, MapObj>;\nexport const allIndexedRetailers = {} as Record<string, IRetailer>;\nexport const allNodesFloor = {} as Record<string, number>;\n\n//<{ x:number, y:number }, { weight: number }>\nexport const pathFinderGraph = createGraph();\nexport const ngraphPath = path;\n","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\r\nimport {getWallShape} from \"./getWallShape\";\r\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\r\nimport {allMapObjects} from \"../../globals\";\r\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\r\nimport {hex_to_color} from \"../../helpers/misc\";\r\n\r\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\r\n\r\n\r\nconst renderOrders = {\r\n    'route-path': 0,\r\n    'escalator': 0,\r\n    'underlay': 0,\r\n    'overlay': 1,\r\n    'building-base': 1,\r\n    'base': 2,\r\n    'store': 3,\r\n    'big-store': 4,\r\n    'kiosk': 5,\r\n    'wall': 6,\r\n    'outer-wall': 7,\r\n    'boundary': 8,\r\n    'amenity': 9,\r\n    'layer-image': 10,\r\n    'layer-text': 11,\r\n    'route-tube': 12,\r\n    'special-shape': 13,\r\n};\r\n\r\nexport type MeshType = keyof typeof renderOrders | null;\r\n\r\nexport function getRenderOrder(mesh_type: MeshType): number {\r\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\r\n        return renderOrders[mesh_type];\r\n    }\r\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\r\n    return 0;\r\n}\r\n\r\nexport const getMaterial = (\r\n    config: IConfig,\r\n    mesh_type: MeshType,\r\n    layer_name: string,\r\n    layer_color: Color | string,\r\n    mesh_transparent: boolean,\r\n    allIndexedMapObjects: Record<string, MapObj>,\r\n) => {\r\n    const material_settings = {\r\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\r\n        side: DoubleSide,\r\n        transparent: false,\r\n        depthWrite: true,\r\n        depthTest: true,\r\n        opacity: 1,\r\n    }\r\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\r\n        if (mesh_type != 'boundary') {\r\n            material_settings.depthWrite = false;\r\n            material_settings.depthTest = false;\r\n        }\r\n    }\r\n    if (mesh_type == 'overlay') {\r\n        material_settings.color = config.OVERLAY_COLOR;\r\n        material_settings.opacity = config.OVERLAY_OPACITY;\r\n    }\r\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\r\n        material_settings.opacity = 0;\r\n    }\r\n    var material = new MeshLambertMaterial(material_settings);\r\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\r\n        //@ts-ignore\r\n        material.colorDefault = material.color;\r\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\r\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\r\n            //@ts-ignore\r\n            material.colorDefault = material.color;\r\n        }\r\n        //@ts-ignore\r\n        material.active = false;\r\n    }\r\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\r\n        material.opacity = 0;\r\n        material.transparent = true;\r\n    }\r\n\r\n    material.transparent = material.opacity !== 1;\r\n\r\n    return material;\r\n}\r\n\r\nexport const getGeometry = (\r\n    config: IConfig,\r\n    mesh_type: MeshType,\r\n    layer_name: string,\r\n    extrude: number,\r\n    line_thickness: number,\r\n    path: any,\r\n) => {\r\n    const consolePrefix = 'MaterialAndGeometry';\r\n\r\n    let shapes = path.toShapes(true);\r\n\r\n    // shapes.forEach((shape, index) => {\r\n    let extrude_meshes;\r\n    if (config.STYLE == '2D') {\r\n        extrude_meshes = ['building-base'];\r\n    } else {\r\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\r\n    }\r\n\r\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\r\n\r\n    var geometry;\r\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\r\n        geometry = new ExtrudeGeometry(shapes, {\r\n            depth: -extrude,\r\n            bevelEnabled: false,\r\n        });\r\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\r\n        //@ts-ignore\r\n        let wall_geometries = [];\r\n        //@ts-ignore\r\n        path.subPaths.forEach(subPath => {\r\n            //@ts-ignore\r\n            subPath.curves.forEach(curve => {\r\n                if (curve.type == 'LineCurve') {\r\n                    let shape_extend = 0;\r\n                    if (mesh_type == 'boundary') {\r\n                        shape_extend = 1;\r\n                    } else if (mesh_type == 'wall') {\r\n                        // shape_extend = 1 / 3;\r\n                    }\r\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\r\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\r\n                        depth: -extrude,\r\n                        bevelEnabled: false,\r\n                    });\r\n                    wall_geometries.push(wall_geometry);\r\n                } else {\r\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\r\n                }\r\n            });\r\n        });\r\n\r\n        if (wall_geometries.length == 1) {\r\n            //@ts-ignore\r\n            geometry = wall_geometries[0];\r\n        } else if (wall_geometries.length > 1) {\r\n            //@ts-ignore\r\n            geometry = mergeGeometries(wall_geometries);\r\n        } else {\r\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\r\n        }\r\n    } else {\r\n        geometry = new ShapeGeometry(shapes);\r\n        try {\r\n            //@ts-ignore\r\n            if (geometry.attributes.position.count == 0) {\r\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\r\n            }\r\n        } catch (e: any) {\r\n            console.error(e.message);\r\n        }\r\n    }\r\n\r\n    return geometry;\r\n}\r\n\r\nexport const getMaterialAndGeometry = (config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\r\n    \r\n    const material = getMaterial(\r\n        config,\r\n        mesh_type,\r\n        layer_name,\r\n        layer_color,\r\n        mesh_transparent,\r\n        allIndexedMapObjects\r\n    );\r\n\r\n    const geometry = getGeometry(\r\n        config,\r\n        mesh_type,\r\n        layer_name,\r\n        extrude,\r\n        line_thickness,\r\n        path\r\n    );\r\n\r\n    const mesh = new Mesh(geometry, material) as IExtMesh;\r\n    mesh.object_id = layer_name;\r\n    mesh.mesh_type = mesh_type;\r\n    mesh.floor_index = floor_index;\r\n    mesh.visible = mesh_visible;\r\n    mesh.position.z = z_index;\r\n    let storeName = '';\r\n    if (['retail_name', 'retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\r\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\r\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\r\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\r\n            storeName = allIndexedMapObjects[layer_name].custom_text;\r\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\r\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\r\n            }\r\n        }\r\n    }\r\n    mesh.userData.storeName = storeName;\r\n    if (config.STYLE == '2D') {\r\n        mesh.renderOrder = getRenderOrder(mesh_type);\r\n        if (layer_name && layer_name.includes('underlay')) {\r\n            mesh.renderOrder = getRenderOrder('underlay');\r\n        }\r\n    }\r\n\r\n    floors[floor_index].objsGroup.add(mesh);\r\n\r\n    if (mesh_type == 'escalator') {\r\n        floors[floor_index].escalatorsNodes[layer_name] = null;\r\n        floors[floor_index].escalatorsObjs.push(mesh);\r\n        mesh.escalator_id = floor_index + '-' + layer_name;\r\n    }\r\n\r\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\r\n        //@ts-ignore\r\n        mesh.route_node_id = null;\r\n\r\n        // add floor_index to the kiosks\r\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\r\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\r\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\r\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\r\n            }*/\r\n        }\r\n\r\n        if (config.ROLE === 'PORTAL') {\r\n            allMapObjects.push(layer_name);\r\n        }\r\n        if (\r\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\r\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\r\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\r\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\r\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\r\n        ) {\r\n            // if (interactiveMesh) {\r\n            floors[floor_index].interactiveObjs.push(mesh);\r\n            // }\r\n        } else if (\r\n            (config.ROLE === 'PORTAL')\r\n        ) {\r\n            floors[floor_index].interactiveObjs.push(mesh);\r\n        }\r\n    }\r\n\r\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\r\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\r\n    // }\r\n\r\n    return {\r\n        mesh,\r\n        geometry,\r\n        material,\r\n        object_id: layer_name,\r\n        mesh_type,\r\n        floor_index,\r\n        visible: mesh_visible,\r\n        renderOrder: mesh.renderOrder,\r\n    }\r\n    // });\r\n\r\n}","import {LineCurve, Shape, Vector3} from \"three\";\r\n\r\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\r\n    let wallShape = new Shape();\r\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\r\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\r\n\r\n    // form help and formulas in /assets/threejs/help/\r\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\r\n    let point1_center = point1.clone().add(dir);\r\n\r\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\r\n    let point2_center = point2.clone().add(dir);\r\n\r\n    let distance = point1.distanceTo(point2_center);\r\n\r\n    let point1_above = {\r\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\r\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\r\n    };\r\n    let point1_below = {\r\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\r\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\r\n    };\r\n\r\n    let point2_above = {\r\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\r\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\r\n    };\r\n    let point2_below = {\r\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\r\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\r\n    };\r\n\r\n    wallShape.moveTo(point1_above.x, point1_above.y);\r\n    wallShape.lineTo(point1_below.x, point1_below.y);\r\n    wallShape.lineTo(point2_below.x, point2_below.y);\r\n    wallShape.lineTo(point2_above.x, point2_above.y);\r\n\r\n    // shape.moveTo(point1_above.x, point1_above.y);\r\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\r\n    // shape.lineTo(point2_below.x, point2_below.y);\r\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\r\n\r\n    return wallShape;\r\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style == '2D') {\n        route_tube.position.z = -10;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj.route_node_id;\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    });\n    return create_route(kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\r\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\r\nimport { SVGResult } from \"three-stdlib\";\r\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\r\nimport {allIndexedMapObjects, allIndexedRetailers, allNodesFloor, pathFinderGraph} from \"src/globals\";\r\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\r\nimport {Raycaster} from \"three\";\r\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\r\n\r\n// TODO: get rid of this global variable\r\nlet node_count = 0;\r\n\r\nexport function loadFloors(floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\r\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\r\n    const escalator_nodes: string[] = [];\r\n    results.forEach((result, floor_index) => {\r\n        if (result.paths && result.paths.length) {\r\n            const pathIds = [];\r\n            for (let i = 0; i < result.paths.length; i++) {\r\n                pathIds.push(result.paths[i]?.userData?.node.id);\r\n            }\r\n            const paths = result.paths;\r\n            for (let i = 0; i < paths.length; i++) {\r\n                const {\r\n                    mesh_type,\r\n                    layer_color,\r\n                    extrude,\r\n                    z_index,\r\n                    mesh_visible,\r\n                    mesh_draw,\r\n                    mesh_transparent,\r\n                    line_thickness,\r\n                    interactiveMesh,\r\n                    path,\r\n                    layer_name,\r\n                } = getMeshParams(\r\n                    paths[i],\r\n                    paths,\r\n                    floors,\r\n                    floor_index,\r\n                    config,\r\n                    ++node_count,\r\n                    //@ts-ignore\r\n                    allNodesFloor,\r\n                    pathFinderGraph\r\n                );\r\n\r\n                if (mesh_draw) {\r\n                    const meshParams = getMaterialAndGeometry(\r\n                        config,\r\n                        mesh_type,\r\n                        layer_name,\r\n                        layer_color,\r\n                        mesh_transparent,\r\n                        mesh_visible,\r\n                        z_index,\r\n                        extrude,\r\n                        line_thickness,\r\n                        floors,\r\n                        floor_index,\r\n                        allIndexedMapObjects,\r\n                        allIndexedRetailers,\r\n                        path,\r\n                        role\r\n                    );\r\n\r\n                    if (layer_name.startsWith('kiosk-')) {\r\n                        if (role === 'PORTAL') {\r\n                            meshParams.mesh.visible = false;\r\n                            //@ts-ignore\r\n                            meshParams.mesh.material.visible = false;\r\n                        }\r\n                    }\r\n\r\n                    if (!GeometriesAndMaterials[floor_index]) {\r\n                        GeometriesAndMaterials[floor_index] = [];\r\n                    }\r\n\r\n                    GeometriesAndMaterials[floor_index].push(meshParams);\r\n                }\r\n            }\r\n            const findStoreNodeRaycaster = new Raycaster();\r\n            const routeNodeIds = assign_route_nodes_to_stores(\r\n                floor_index,\r\n                floors,\r\n                allIndexedMapObjects,\r\n                allIndexedRetailers,\r\n                allNodesFloor,\r\n                escalator_nodes,\r\n                findStoreNodeRaycaster,\r\n                config.ROLE\r\n            );\r\n\r\n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\r\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\r\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\r\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\r\n                    }\r\n                }\r\n            }\r\n\r\n            linkFloorEscalators(floors, pathFinderGraph);\r\n\r\n        }\r\n    })\r\n\r\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\r\n}","import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            img.src = map_obj.custom_image;\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    const map_obj = allIndexedMapObjects[object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n   ) {\n        getImageLogo(allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\nimport {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nconst BASE_URL = 'https://test.mycenterdeals.com/data/mapit2/';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n\n    const KIOSKS:Record<string, Kiosk> = {};\n    response.kiosks.forEach((kiosk) => {\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: BASE_URL + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: config.CAMERA,\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK,\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: config.STYLE,\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles): IMeshParamsTmp => {\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            values.push(`${BASE_URL}${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '8',\n    // KIOSK: '51',\n    KIOSK: '108',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '-',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n};","import {useThree} from \"@react-three/fiber\";\r\nimport {Color} from \"three\";\r\n\r\ninterface IScenePropertiesProps {\r\n    background?: Color | string;\r\n}\r\n\r\nexport const SceneProperties = (params:IScenePropertiesProps) => {\r\n    const { scene } = useThree();\r\n    if (params.background) {\r\n        scene.background = new Color(params.background);\r\n    }\r\n    return null;\r\n}","import {useThree} from \"@react-three/fiber\";\r\nimport { ICameraPropertiesProps } from \"src/types\";\r\nimport {PerspectiveCamera} from \"three\";\r\n\r\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\r\n    const { camera } = useThree();\r\n\r\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\r\n    if (props.far) {\r\n        camera.far = props.far;\r\n    }\r\n    if (props.near) {\r\n        camera.near = props.near;\r\n    }\r\n\r\n    if (camera instanceof PerspectiveCamera) {\r\n        if (props.fov) {\r\n            camera.fov = props.fov;\r\n        }\r\n    }\r\n\r\n    if (cameraProjectionNeedsUpdate) {\r\n        camera.updateProjectionMatrix();\r\n    }\r\n\r\n    return null;\r\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = -easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import {IMeshParams, TRoles} from \"../../types\";\r\nimport {ThreeEvent} from \"@react-three/fiber\";\r\nimport React, {MouseEventHandler} from \"react\";\r\nimport {Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB} from \"three\";\r\nimport {RouteTube} from \"./RouteTube\";\r\nimport {Html} from \"@react-three/drei\";\r\nimport styles from '../../MapBox.module.css';\r\n\r\ninterface IMapProps {\r\n    floorIndex: number,\r\n    meshFloors: IMeshParams;\r\n    currKioskObj: Mesh | null;\r\n    activeObjectId?: string;\r\n    hoverObjectId?: string;\r\n    routeTube?: Mesh;\r\n    visible: boolean,\r\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\r\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\r\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\r\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\r\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>;\r\n}\r\n\r\nconst getDarkerColor = (color: RGB) => {\r\n    if (color) {\r\n        var newColor = { ...color }\r\n        newColor.r = color.r * 0.92;\r\n        newColor.g = color.g * 0.92;\r\n        newColor.b = color.b * 0.92;\r\n        return newColor;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const Map = (params: IMapProps) => {\r\n    const {meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor} = params;\r\n\r\n    const { config, meshParams, textParams, storeLogos} = meshFloors;\r\n    const floor = meshFloors.floors[floorIndex];\r\n\r\n    const onPointerMove = params.onPointerMove;\r\n    const onPointerOver = params.onPointerEnter;\r\n    const onPointerOut = params.onPointerLeave;\r\n    const onClick = params.onClick;\r\n\r\n    const floorMeshParams = meshParams[floorIndex];\r\n    const floorTextParams = textParams[floorIndex];\r\n    const floorStoreLogos = storeLogos[floorIndex];\r\n    const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\r\n\r\n    // console.log('Map', floorIndex, { meshParams, floorIndex, floorMeshParams, floorTextParams, floorStoreLogos, routeTubes})\r\n    return (\r\n        <group visible={visible}>\r\n            {floorMeshParams?.map((params) => {\r\n                if (!params.mesh) return null;\r\n\r\n                const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\r\n                const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\r\n                const active = activeObjectId && params.mesh.object_id === activeObjectId;\r\n                if (interactive) {\r\n                    // TODO: move those colorDefault, active, etc to userData of mesh or material\r\n                    if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\r\n                        // @ts-ignore\r\n                        const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\r\n                        //console.log('Map', {baseColor, active, hovered})\r\n                        params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\r\n                    } else {\r\n                        // @ts-ignore\r\n                        params.mesh.material.color = params.mesh.material.colorDefault;\r\n                    }\r\n                }\r\n\r\n                return <group key={params.mesh.uuid} {...(interactive? {onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\r\n                    <primitive object={params.mesh}></primitive>\r\n                </group>\r\n            })}\r\n            {floorTextParams?.map((params) => {\r\n                if (!params.textMesh) return null;\r\n                return <primitive key={params.textMesh.uuid} object={params.textMesh}>\r\n                </primitive>\r\n            })}\r\n            {floorStoreLogos?.map((params) => {\r\n                if (!params.storeLogo) return null;\r\n\r\n                return <primitive key={params.storeLogo.uuid} object={params.storeLogo}>\r\n                    {visible && params.storeLogo.userData.htmlContent? <Html>{params.storeLogo.userData.htmlContent}</Html> : null}\r\n                </primitive>\r\n            })}\r\n            {escalatorMeshes?.map((params) => {\r\n                //@ts-ignore\r\n                return <primitive key={`escalator-${params.object_id}`} object={params}>\r\n                    <Html visible={false} position={params.geometry.boundingSphere?.center}>\r\n                        <div onClick={handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\r\n                            <div className={styles.element} id={params.object_id as string}>\r\n                                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Html>\r\n                </primitive>\r\n            })}\r\n            <RouteTube mesh={routeTube} />\r\n        </group>\r\n    )\r\n}","import {IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode} from \"../../types\";\nimport {Map} from \"./Map\";\nimport React, {MouseEventHandler, useCallback, useEffect, useRef, useState} from \"react\";\nimport {Group, Mesh, PerspectiveCamera, Vector3} from \"three\";\nimport {ThreeEvent, useFrame, useThree} from \"@react-three/fiber\";\nimport {get_camera_focus_object} from \"../../helpers/camera.helpers\";\nimport {MapControls} from \"@react-three/drei\";\nimport {create_route, make_amenity_route} from \"../../helpers/route.helpers\";\nimport {allIndexedMapObjects} from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\n\ninterface IFloorsMapProps {\n    meshFloors: IMeshParams;\n    currentFloorIndex: number;\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    onCameraMove?: (e: any) => void;\n    currKioskObj: Mesh;\n    routeTargetId?: string;\n    amenityTargetType: string;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>,\n    escalatorNodes: string[];\n    zoom: IZoomData | null;\n    handleCameraLength?: (length: number) => void;\n    config: IConfig;\n}\n\n\nexport const FloorsMap = (params:IFloorsMapProps) => {\n    const { meshFloors, currentFloorIndex, currKioskObj, routeTargetId, amenityTargetType, handleChangeFloor, escalatorNodes, zoom, handleCameraLength, config } = params;\n    const { floors } = meshFloors;\n\n    const groupRef = useRef<Group>(null);\n    const [ routeTubes, setRouteTubes ] = useState<Mesh[]>([]);\n    const mapControlRef = useRef<any>(null);\n    const { camera, scene } = useThree();\n    const cameraFocus = useRef<{\n        position:Vector3, target:Vector3,\n        fromPosition:Vector3, fromTarget:Vector3,\n        animationStartTime:number, duration:number } | null>(null);\n    // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n    const style = meshFloors.config.STYLE;\n    const accentColor = meshFloors.config.ACCENT_COLOR;\n    const pathFinderGraph = meshFloors.pathFinderGraph;\n    const from = (currKioskObj as IExtMesh).object_id;\n\n    useEffect(() => {\n        if (!amenityTargetType || config.ROLE === 'PORTAL') {\n            setRouteTubes([]);\n            return;\n        }\n        const route = make_amenity_route(from?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n        setRouteTubes(route);\n    }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n    useEffect(() => {\n        if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n            if (config.ROLE === 'PORTAL' && routeTargetId) {\n                const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n                if (targetMesh) {\n                    setRouteTubes([targetMesh as IExtMesh])\n                }\n            } else {\n                setRouteTubes([]);\n            }\n            return;\n        }\n        if (!amenityTargetType) {\n            floors.forEach(floor => {\n                floor.escalatorMeshes = [];\n            });\n        }\n\n\n        console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n        /* MAKE ROUTE PATH */\n\n        const route = create_route(from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n        // TODO: activate object (moved out of create_route function)\n        // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n        // TODO: focus object (moved out of create_route function)\n        // if (!routePaths.length) {\n        //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n        //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n        //     camera.position.copy(position);\n        // }\n\n\n        setRouteTubes(route);\n\n    }, [ from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes ]);\n\n    const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n    useEffect(() => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let meshes:Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL'? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n\n        return () => {\n            cameraFocus.current = null;\n        };\n    }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n    useEffect(() => {\n        if (zoom?.direction && mapControlRef.current) {\n            const vector = new Vector3();\n            vector.copy(mapControlRef.current.target);\n            vector.sub(mapControlRef.current.object.position);\n            vector.setLength(vector.length() * 0.4);\n\n            if (zoom.direction === 'in') {\n                camera.position.add(vector);\n            } else {\n                camera.position.sub(vector);\n            }\n        }\n    }, [zoom])\n\n    const onCameraMove = useCallback((e: any) => {\n        if (handleCameraLength) {\n            const vector = new Vector3();\n            vector.copy(e.target.object.position);\n            vector.sub(mapControlRef.current.target);\n            handleCameraLength(vector.length());\n        }\n    }, [handleCameraLength])\n\n    useFrame(() => {\n        if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n            const focus = cameraFocus.current;\n            const animationTime = (performance.now() - focus.animationStartTime)/1000;\n\n            const animationProgress = Math.min(1, animationTime / focus?.duration);\n            mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n            mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n            mapControlRef.current.object.updateProjectionMatrix();\n            if (animationProgress >= 1) {\n                cameraFocus.current = null;\n            }\n        }\n    })\n\n    return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n        <>\n            <MapControls\n                makeDefault\n                onChange={onCameraMove}\n                ref={mapControlRef}\n                maxPolarAngle={Math.PI / 2}\n                minDistance={config.CAMERA.minDistance}\n                maxDistance={config.CAMERA.maxDistance}\n                />\n\n            {floors && floors.map(( value: IFloorData, index: number) => (\n                <Map\n                    key={`Map-${index}`}\n                    visible={currentFloorIndex === index}\n                    floorIndex = {index}\n                    currKioskObj={params.currKioskObj}\n                    activeObjectId={params.activeObjectId}\n                    hoverObjectId={params.hoverObjectId}\n                    meshFloors={meshFloors}\n                    routeTube={config.ROLE !== 'PORTAL'? routeTubes && routeTubes[index] : undefined}\n                    onPointerEnter={params.onPointerEnter}\n                    onPointerLeave={params.onPointerLeave}\n                    onPointerMove={params.onPointerMove}\n                    onClick={params.onClick}\n                    handleChangeFloor={handleChangeFloor}\n                />\n            ))}\n        </>\n    </group>)\n}","import type {Mesh} from \"three\";\r\nimport {Box3, Vector3} from \"three\";\r\n\r\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\r\n    // config.STYLE\r\n    // config.CAMERA.fov\r\n\r\n    if (!Array.isArray(objs)) {\r\n        objs = [objs];\r\n    }\r\n    if (!objs.length) {\r\n        console.warn('get_camera_focus_object: no objects passed');\r\n        return { position: new Vector3(), target: new Vector3() };\r\n    }\r\n\r\n    const objsBoundingBox = objs.reduce((box, obj) => {\r\n        if (!obj.geometry.boundingBox) {\r\n            obj.geometry.computeBoundingBox();\r\n        }\r\n        if (obj.geometry.boundingBox) {\r\n            box.union(obj.geometry.boundingBox);\r\n        }\r\n        return box;\r\n    }, new Box3());\r\n\r\n    const obj_size = new Vector3();\r\n    objsBoundingBox.getSize(obj_size);\r\n\r\n    const center = new Vector3();\r\n    objsBoundingBox.getCenter(center);\r\n\r\n    objs[0].localToWorld(center);\r\n\r\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\r\n    // var padding = max_length * 0.2;\r\n    // if (padding > 50) padding = 50;\r\n    // max_length += padding;\r\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\r\n\r\n    let tanFOV = Math.tan(Math.PI * fov / 360);\r\n    let padding = 1.1;\r\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\r\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\r\n    let new_y = Math.max(new_width, new_height);\r\n    let new_z = getCameraTiltPosition(new_y, style);\r\n\r\n    const target = new Vector3(center.x, 0, center.z);\r\n    const position = new Vector3(center.x, new_y, center.z + new_z);\r\n\r\n    // createjs.Ticker.framerate = 60;\r\n    // createjs.Tween.get(config.CONTROLS.target)\r\n    //     .to({ x: center.x, z: center.z }, 400);\r\n    // createjs.Tween.get(config.CAMERA.position)\r\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\r\n\r\n    return {position, target};\r\n}\r\n\r\nfunction getCameraTiltPosition(y:number, style:string): number {\r\n    let angle = 60;\r\n    if (style == '2D') angle = 89.9;\r\n    return y / Math.tan(angle * Math.PI / 180);\r\n}","import { IFloorSelectorProps } from \"../../types\";\nimport styles from '../../MapBox.module.css';\n\ntype TFloorButtonProps = {\n    isActive: boolean,\n    onClick: (e: any) => void,\n    text: string,\n}\n\nconst FloorButton = ({isActive, onClick, text }: TFloorButtonProps) => {\n    return (\n\n        <div\n            className={`${styles.floor} ${styles.control_btn} ${isActive ? styles.active : ''}`} onClick={onClick}\n        >\n            {text}\n        </div>\n    )\n}\n\nconst FloorSelector = ({floors, selectedFloorIndex, handleFloorChange, accentColor}: IFloorSelectorProps) => {\n    const floorButtons: Array<TFloorButtonProps & {key: string}> = [];\n    for (let i = 0; i < floors.length; i++) {\n        const style = {display: 'flex', cursor: 'pointer', background: 'white'};\n        if (i === selectedFloorIndex) {\n            style.background = accentColor;\n        }\n        floorButtons.push({\n            key: `floor-change-btn-${i}`,\n            isActive: i === selectedFloorIndex,\n            onClick: handleFloorChange(i),\n            text: floors[i].title,\n        })\n    }\n\n    return (\n        <div className={`${styles.floors} ${styles.btn_group}`}>\n            {floorButtons.map(value => <FloorButton key={value.key} isActive={value.isActive} onClick={value.onClick} text={value.text} ></FloorButton>)}\n        </div>\n    );\n}\n\nexport default FloorSelector;\n","const ATM = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n        </svg>\n    )\n}\n\nexport default ATM;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","\nconst Elevator = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n        </svg>\n    )\n}\n\nexport default Elevator;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst Management = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Management;","\nconst PlayArea = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default PlayArea;","\nconst Restroom = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Restroom;","\nconst Security = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Security;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TMapMode, TRoles } from \"src/types\";\nimport FloorSelector from \"./FloorSelector\";\nimport { MouseEventHandler } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport ATM from \"../Icons/ATM\";\nimport DogPoopStation from \"../Icons/DogPoopStation\";\nimport Elevator from \"../Icons/Elevator\";\nimport FamilyRestroom from \"../Icons/FamilyRestroom\";\nimport Management from \"../Icons/Management\";\nimport PlayArea from \"../Icons/PlayArea\";\nimport Restroom from \"../Icons/Restroom\";\nimport Security from \"../Icons/Security\";\n\nconst Names = ['atm', 'dog-poop-station', 'elevator', 'family-restroom', 'management', 'playarea', 'restroom', 'security'] as const;\n\ntype TIconName = (typeof Names)[number];\n\ntype TAmenityIconProps = {\n    type: TIconName,\n}\n\ntype TElement =  undefined | (() => JSX.Element);\n\nconst AmenityIcon = ({type}: TAmenityIconProps) => {\n    let name: TElement;\n    name = undefined;\n\n    switch (type) {\n        case 'atm':\n                name = ATM;\n            break;\n        case 'dog-poop-station':\n                name = DogPoopStation;\n            break;\n        case 'elevator':\n                name = Elevator;\n            break;\n        case 'family-restroom':\n                name = FamilyRestroom;\n            break;\n        case 'management':\n                name = Management;\n            break;\n        case 'playarea':\n                name = PlayArea;\n            break;\n        case 'restroom':\n                name = Restroom;\n            break;\n        case 'security':\n                name = Security;\n            break;\n    \n        default:\n            break;\n    }\n    if (name !== undefined) {\n        const Comp = name;\n        return (\n            <>\n                <Comp></Comp>\n            </>\n        )\n    } else {\n        return null;\n    }\n\n}\n\n\nconst UIComponent = ({\n    floors,\n    accentColor,\n    selectedFloorIndex,\n    handleFloorChange,\n    amenitiesList,\n    zoomIn,\n    zoomOut,\n    reset,\n    clearRoute,\n    handleAmenityClick,\n    role,\n}: IFloorSelectorProps & {\n    amenitiesList: IAmenitiesInteractiveList[],\n    zoomIn?: MouseEventHandler<HTMLDivElement>,\n    zoomOut?: MouseEventHandler<HTMLDivElement>,\n    reset?: () => void,\n    clearRoute?: MouseEventHandler<HTMLDivElement>,\n    handleAmenityClick: (type: string) => void,\n    role?: TRoles,\n}\n) => {\n    const handleResetClick: MouseEventHandler = (e) => {\n        e.preventDefault();\n        if (reset instanceof Function) {\n            reset();\n        }\n    }\n return(\n        <div id={styles['threejs-map-wrapper']}>\n            <div id={styles['threejs-map']}>\n                <div id={styles['map_controls']} className={`${!floors? 'hide' : ''}`}>\n                    <div className={styles['btn_group']}>\n                        <div onClick={handleResetClick} className={`${styles['reset']} ${styles['control_btn']}`}>RESET</div>\n                        <div onClick={clearRoute} className={`${styles['clear_route']} ${styles['control_btn']} ${clearRoute? '' : styles.hide}`}>Clear Route</div>\n                    </div>\n                    <FloorSelector  accentColor={accentColor} floors={floors} selectedFloorIndex={selectedFloorIndex} handleFloorChange={handleFloorChange}/>\n                    <div className={`${styles['btn_group']} ${styles['zoom_btns']}`}>\n                        <div onClick={zoomOut} className={`${styles['zoom-out']} ${styles['control_btn']}`}>–</div>\n                        <div onClick={zoomIn} className={`${styles['zoom-in']} ${styles['control_btn']}`}>+</div>\n                    </div>\n                </div>\n                <div id={styles['mapit2_loader']} className={styles['hide']}>Loading map, please wait...</div>\n                    {role !== 'PORTAL' &&\n                        <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n                            {amenitiesList.map((amenity, index) => (\n                                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                                    <div className={styles.img}>\n                                        <AmenityIcon type={amenity.type as TIconName}></AmenityIcon>\n                                        {/* <img src={amenity.imageUrl} alt=\"\" /> */}\n                                    </div>\n                                    <div className={`${styles.name}`}>{amenity.name}</div>\n                                </div>\n                            ))}\n                        </div>\n                    }\n            </div>\n        </div>\n )   \n}\n\nexport default UIComponent;\n","import React, {useEffect} from \"react\";\nimport styles from '../../MapBox.module.css';\n\nexport const MapCenterMarker = ({koef}: {koef: number}) => {\n    const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n    // todo figure out better way\n    useEffect(() => {\n        if (!kioskElementRef.current) return;\n        const kioskElement = kioskElementRef.current;\n        const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n        let svgClone:Node;\n        if (svgOrigin) {\n            svgClone = svgOrigin.cloneNode(true);\n            kioskElement.appendChild(svgClone);\n        }\n\n        return () => {\n            if (svgClone) {\n                kioskElement.removeChild(svgClone);\n            }\n        }\n    }, []);\n\n    return <>\n        <div className={styles['mapCenterMarker']}></div>\n        <div className={styles['kioskMarker']} ref={kioskElementRef} style={{width: koef*10+15, height: koef*10+30}}></div>\n    </>\n}","import { createContext, useContext, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IExtMesh } from \"src/types\";\n\n\ntype TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>>;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext | null>(null);\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nconst getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors} = params;\n\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj>(getDefaultMapOjbValues(centerId));\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [isPending, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id === item.id);\n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = (e: any) => {\n        if (e.target.value) {\n            formData.retailer_id = e.target.value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        let text_geometry = new TextGeometry(text, {\n            font: obj.userData.font,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        obj.geometry.dispose();\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id === item.id);\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                obj.userData.position.copy(obj.position);\n            }\n            const position = new Vector3();\n            position.copy(obj.userData.position);\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id === item.id);\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity', 'kiosk'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } \n                    break;\n\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                    <Form.Select className=\"mb-3\" aria-label=\"Choose a Retailer\" value={formData.retailer_id?? ''} onChange={handleChangeRetailer}>\n                        <option value={''} disabled hidden>Choose a Retalier...</option>\n                        {data.retailers?.map((value: any) => <option key={`retailer-${value.id}`} value={value.id}>{value.retail_name} - {value.location}</option>)}\n                    </Form.Select>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\n","import React, {MouseEventHandler, useCallback, useEffect, useMemo, useRef, useState} from \"react\";\nimport {Canvas, ThreeEvent, useThree} from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport {SceneProperties} from \"./SceneProperties\";\nimport {CameraProperties} from \"./CameraProperties\";\nimport {Mesh, Object3D} from \"three\";\nimport {IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, TMapMode} from \"src/types\";\nimport {FloorsMap} from \"./FloorsMap\";\nimport {useMapit2Data} from \"../../useMapit2Data\";\nimport {MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport {MapCenterMarker} from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.css';\nimport {Alert} from 'react-bootstrap';\n\nconst amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        imageUrl: '/assets/threejs/assets/img/amenities/atm.svg?color=FFFFFF',\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        imageUrl: '/assets/threejs/assets/img/amenities/management.svg?color=FFFFFF',\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        imageUrl: '/assets/threejs/assets/img/amenities/playarea.svg?color=FFFFFF',\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        imageUrl: '/assets/threejs/assets/img/amenities/restroom.svg?color=FFFFFF',\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        imageUrl: '/assets/threejs/assets/img/amenities/elevator.svg?color=FFFFFF',\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        imageUrl: '/assets/threejs/assets/img/amenities/security.svg?color=FFFFFF',\n    },\n] \n\ninterface ISceneComponentProps {\n    mapitData?: MapIt2Response;\n    config: Partial<IJsonConfig>;\n    selectedActiveObjectId: string;\n    setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n    onMapDataUpdate?: (data: MapObj[]) => void;\n}\n\nexport interface IZoomData {\n    direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = (params:ISceneComponentProps) => {\n    const data = useMapit2Data({ mapitData:params.mapitData, CENTER_ID: params.config.CENTER_ID as string });\n    const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n    const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n\n    const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate } = params;\n\n    const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n    const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n    const [cameraLength, setCameraLength] = useState<number>(0);\n\n    const statsParentRef = useRef(null);\n\n    const handleCameraLength = useCallback((length: number) => {\n        setCameraLength(length);\n    }, [])\n\n    const handleFloorChange = (floorIndex: number): MouseEventHandler<HTMLDivElement> => (e) => {\n        setSelectedFloorIndex(floorIndex);\n    }\n\n\n    const meshFloors = useMeshFloors(data, params.config, params.config.ROLE);\n    const mapCenterMarkerRef = useRef(null);\n    const labelRef = useRef<HTMLDivElement>(null);\n    const [ currentHoveredObject, setCurrentHoveredObject ] = useState<Object3D | null>(null);\n    const meshObjectContext = useMeshObjectContext();\n\n    const config = meshFloors.config;\n    const floors = meshFloors.floors;\n    const meshParams = meshFloors.meshParams;\n\n\n    // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n    let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n    if (selectedActiveObjectId) {\n        activeObjectId = selectedActiveObjectId;\n    } else if (amenityTargetType) {\n        activeObjectId = '';\n    }\n\n    const handleChangeMapitData = (index: number, newData: MapObj) => {\n        const itemIndex = formMapObjData.findIndex((item) => item.data.id === newData.id);\n\n        if (itemIndex !== -1) {\n            formMapObjData[itemIndex] = { index, data: { ...newData } };\n        } else {\n            formMapObjData.push({ index, data: { ...newData } })\n        }\n\n        setFormMapObjData([...formMapObjData]);\n    }\n\n  const getMapitData = (): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.id === value.data.id);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }\n\n\n    useEffect(() => {\n        // console.log('useEffect currentHoveredObject', currentHoveredObject)\n        document.body.style.cursor = currentHoveredObject? 'pointer' : 'default';\n    }, [currentHoveredObject]);\n\n    const [ currKioskObj, currKioskFloorIndex, kioskError ]: [ Mesh | null, number, string ] = useMemo(() => {\n        if (!config) {\n            return [ null, 0, '' ] // not an error - loading/initializing\n        }\n        let kioskError = '';\n        let currKioskObj: Mesh | null = null;\n        let currKioskFloorIndex = 0;\n        if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n            const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n            const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n            if (currKioskMeshParams) {\n                currKioskObj = currKioskMeshParams.mesh;\n                currKioskFloorIndex = currKioskMeshParams.floor_index;\n            }\n        } else {\n            if (config.ROLE === 'WEBSITE') {\n                kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n            }\n\n            console.error('Kiosk not found in config');\n            kioskError = 'Map initialization error';\n        }\n\n        return [ currKioskObj, currKioskFloorIndex, kioskError]\n    }, [config, meshParams]);\n\n    const resetHandle = () => {\n        setSelectedFloorIndex(currKioskFloorIndex);\n        setSelectedActiveObjectId('');\n    }\n\n    useEffect(() => {\n        const currKioskLogo = currKioskObj? meshFloors.storeLogos.flat().find(storeLogo => storeLogo.storeLogo.object_id === 'custom-layer-' + (currKioskObj as IExtMesh).object_id)?.storeLogo : null;\n        if (currKioskLogo && config?.ROLE !== 'PORTAL' && config) {\n            const koef = cameraLength/(config.CAMERA.maxDistance - config.CAMERA.minDistance);\n            currKioskLogo.userData.htmlContent = <MapCenterMarker koef={1-koef} />\n            currKioskLogo.position.z = -(koef*80);\n            meshFloors.storeLogos.flat().map(storeLogo => {\n                if (storeLogo.storeLogo.object_id === currKioskLogo.object_id) {\n                    storeLogo.storeLogo.visible = false;\n                }\n                return null;\n            })\n        }\n        return () => {\n            if (currKioskLogo) {\n                currKioskLogo.userData.htmlContent = null;\n            }\n        }\n    }, [meshFloors, currKioskObj, cameraLength]);\n\n    useEffect(() => {\n        if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId && meshObjectContext?.SetMeshObject) {\n            const object = meshFloors.meshParams[selectedFloorIndex === -1? 0 : selectedFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n            if (object) {\n                //@ts-ignore\n                handleMeshObjectContext(object);\n            }\n            //@ts-ignore\n        }\n    }, [meshFloors])\n\n    useEffect(() => {\n        if (onMapDataUpdate) {\n            const exportData: MapObj[] = [];\n\n            formMapObjData.forEach((value) => {\n                exportData.push({...value.data});\n            })\n        }\n    }, [formMapObjData])\n\n    const handleMeshObjectContext = (object: IExtMesh) => {\n        if (meshObjectContext?.SetMeshObject) {\n            const textParams = meshFloors.textParams[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const logoParams = meshFloors.storeLogos[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const result = [object as IExtMesh];\n\n            if (textParams) {\n                result.push(textParams.textMesh);\n            }\n\n            if (logoParams) {\n                result.push(logoParams.storeLogo)\n            }\n\n            meshObjectContext.SetMeshObject([...result]);\n        }\n    }\n\n    const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n        e.stopPropagation();\n        // console.log('onClick', e.object)\n\n        const targetId = (e.object as IExtMesh).object_id;\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n        // console.log('set active object', targetId);\n        setAmenityTargetType('');\n    }, [selectedFloorIndex, meshFloors.meshParams.length]);\n\n    const handleAmenityClick = useCallback((type: string) => {\n        setAmenityTargetType(type)\n        setSelectedActiveObjectId('')\n    }, []);\n\n    const onCameraMove = useCallback((e: any) => {\n        if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n            return\n        }\n    }, []);\n\n    const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerEnter', e.object)\n        if (!e.object.userData.storeName) {\n            // console.warn('onPointerEnter no storeName', e.object);\n            return;\n        }\n        setCurrentHoveredObject(e.object);\n    }, []);\n\n    const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerLeave', e.object)\n        setCurrentHoveredObject(null);\n    }, []);\n\n    const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerMove', e.object)\n\n        if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n            labelRef.current.style.top = `${e.offsetY - 65}px`;\n            labelRef.current.style.left = `${e.offsetX}px`;\n            labelRef.current.style.display = 'block';\n        }\n    }\n\n    if (!config || !meshFloors.meshParams.length) {\n        console.warn('LOADING MAP')\n        return <div>Loading Map</div>\n    }\n\n    if (kioskError) {\n        return <div>{kioskError}</div>\n    }\n\n    const currentFloorIndex = selectedFloorIndex > -1 ? selectedFloorIndex : currKioskFloorIndex;\n\n    if (!currKioskObj) {\n        console.error('NO KIOSK OBJECT FOUND');\n        return <div>Map initialization error</div>\n    }\n\n    // make sure that meshFloors conditionals are not null\n    const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n    let hoverObject = currentHoveredObject as IExtMesh\n    let hoverObjectId = '';\n    if (hoverObject && hoverObject.object_id) {\n        hoverObjectId = hoverObject.object_id;\n    }\n\n\n\n    return (\n        <>\n            {config.ROLE === 'PORTAL' &&\n                <div className={styles['mapbox-admin-form']}>\n                    {!selectedActiveObjectId? \n                    <Alert variant=\"info\">Select a store to customize.</Alert>\n                    :\n                        <MapboxForm\n                            floorIndex={currentFloorIndex}\n                            meshFloors={meshFloors}\n                            config={config}\n                            data={getMapitData()}\n                            setData={handleChangeMapitData}\n                            selectedId={selectedActiveObjectId}\n                            centerId={params.config.CENTER_ID as string}\n                        />\n                    }\n                </div>\n            }\n            <div ref={statsParentRef} style={{ position: 'relative' }}>\n                <UIComponent accentColor={config.ACCENT_COLOR.getStyle()} floors={floors} selectedFloorIndex={currentFloorIndex} handleFloorChange={handleFloorChange} amenitiesList={amenitiesList} handleAmenityClick={handleAmenityClick} reset={resetHandle} zoomIn={() => setZoom({ direction: 'in' })} zoomOut={() => setZoom({ direction: 'out' })} role={config.ROLE} />\n                <Canvas flat>\n                    {Number(params.config.STATS)? <Stats className={styles.stats} parent={statsParentRef} /> : null }\n                    <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n                    <CameraProperties near={1} far={10000} />\n                    {/*<axesHelper args={[5000]} />*/}\n\n                    <ambientLight intensity={1} color={'#c4c4c4'} />\n                    <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n                    <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n                    <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n                    <FloorsMap\n                        onCameraMove={onCameraMove}\n                        meshFloors={meshFloorsChecked}\n                        activeObjectId={activeObjectId}\n                        hoverObjectId={hoverObjectId}\n                        currKioskObj={currKioskObj}\n                        routeTargetId={activeObjectId}\n                        currentFloorIndex={currentFloorIndex}\n                        onPointerEnter={onPointerEnter}\n                        onPointerLeave={onPointerLeave}\n                        onPointerMove={onPointerMove}\n                        onClick={onClick}\n                        handleChangeFloor={handleFloorChange}\n                        amenityTargetType={amenityTargetType}\n                        escalatorNodes={meshFloors.escalator_nodes}\n                        zoom={zoom}\n                        handleCameraLength={handleCameraLength}\n                        config={config}\n                    />\n                </Canvas>\n                <div ref={labelRef}\n                    style={{\n                        position: 'absolute',\n                        padding: 10,\n                        background: '#ffffff',\n                        fontWeight: 600,\n                        color: '#000000',\n                        fontSize: 16,\n                        display: currentHoveredObject ? 'block' : 'none',\n                        top: 300,\n                        left: 400,\n                        opacity: .8,\n                    }}\n                >\n                    <div>\n                        {currentHoveredObject && currentHoveredObject.userData.storeName}\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n};\n\n\n\nexport default SceneComponent;\n","import {useEffect, useState} from \"react\";\nimport {MapIt2Response} from \"./mapitApiTypes\";\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData }: useMapIt2DataProps) {\n    const [data, setData] = useState<MapIt2Response|null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n        // const url = '/data/mapit2/' + CENTER_ID + '.json';\n        const url = `https://test.mycenterdeals.com/api/mapit2/data?center=${CENTER_ID}&time=1693919608355`;\n\n        fetch(url)\n            .then(response => response.json())\n            .then((response: MapIt2Response) => {\n                setData({...response});\n            });\n\n    }, [CENTER_ID, mapitData]);\n\n    return data;\n}","import React, { useEffect, useState } from 'react';\nimport styles from './MapBox.module.css';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport {isMapIt2Response, MapIt2Response, MapObj} from \"./mapitApiTypes\";\nimport {IJsonConfig, TMapMode, TRoles} from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport interface IAppProps {\n    mapitData?: unknown;\n    config: Partial<IJsonConfig>;\n    stats?: boolean;\n}\n\nfunction MapBox({ mapitData, config }: IAppProps) {\n\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  return (\n    <MeshObjectContextProvider>\n      <div className={`${styles['mapbox-component']} ${config.ROLE !== 'PORTAL'? styles.view : ''}`}>\n          <SceneComponent setSelectedActiveObjectId={setSelectedActiveObjectId} selectedActiveObjectId={selectedActiveObjectId} mapitData={mapData} config={config} />\n        <div className={styles.hide}>\n          <div id=\"map-special-svg-kiosk\">\n            <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n              <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-atm\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n              <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-management\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n              <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-playarea\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n              <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n              <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-family-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n              <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-elevator\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n              <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-security\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n              <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-dog-poop-station\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n              <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n              <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n              <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n              <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n              <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </MeshObjectContextProvider>\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: null;\n    controls: null;\n};\n\nexport type Settings = {\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","allIndexedMapObjects","allIndexedRetailers","createGraph","hex_to_color","hex_code","Color","parseInt","getFormatedColor","replace","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","type","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","value","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","find","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","loadFloors","results","GeometriesAndMaterials","result","meshParams","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","Map","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","assign_route_nodes_to_stores","size","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","graph","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","obj_angle","rotate","rotateZ","Math","PI","scale","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","textLogoNamePrefix","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","defaultMapObjValues","center_id","kiosk_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","BASE_URL","useMeshFloors","jsonConfig","setMeshParams","useState","textParams","setTextParams","storeLogos","setStoreLogos","setPathFinderGraph","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","myFont","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","retailers","map_objs","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","settings","parseFloat","camera_controls_states","CONTROLS","AMENITIES","amenities","RETAILERS","values","removeFromParent","textMesh","TextsAndLogos","params","item","boundingBox","computeBoundingBox","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","get_store_name_logo_geo","useMemo","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","far","near","fov","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","_jsx","jsx","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","_jsxs","children","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","uuid","htmlContent","Html","boundingSphere","styles","escalator_elems","display","className","element","label","FloorsMap","currentFloorIndex","currKioskObj","routeTargetId","amenityTargetType","zoom","handleCameraLength","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","meshes","currentActiveObject","focus","objs","aspectRatio","Array","isArray","target","objsBoundingBox","reduce","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","get_camera_focus_object","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","vector","onCameraMove","animationTime","animationProgress","lerpVectors","rotation","ref","jsxs","_Fragment","Fragment","MapControls","makeDefault","onChange","maxPolarAngle","FloorButton","isActive","control_btn","FloorSelector","selectedFloorIndex","handleFloorChange","floorButtons","btn_group","ATM","xmlns","viewBox","d","transform","fill","DogPoopStation","cx","cy","rx","ry","Elevator","FamilyRestroom","Management","PlayArea","Restroom","Security","AmenityIcon","UIComponent","amenitiesList","zoomIn","zoomOut","reset","clearRoute","handleAmenityClick","preventDefault","Function","hide","backgroundColor","MapCenterMarker","koef","kioskElementRef","React","kioskElement","svgOrigin","svgClone","cloneNode","appendChild","removeChild","MeshObjectContext","createContext","MeshObjectContextProvider","MeshObject","SetMeshObject","Provider","useMeshObjectContext","context","useContext","Error","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","MapboxForm","setData","selectedId","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","formData","setFormData","setRotation","timeoutRef","isPending","startTransition","useTransition","intervalRefs","handleChangeTab","k","updateData","isTRetailerTabsKey","retailIndex","findIndex","makeTextGeometry","makeImage","HTMLImageElement","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","decrementValue","hasOwn","toString","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","Form","Select","disabled","hidden","location","Tabs","Label","Control","as","rows","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","ArrowClockwise","htmlFor","handleRotateByFixedAngle","imageUrl","SceneComponent","mapitData","fetch","then","json","useMapit2Data","setSelectedFloorIndex","formMapObjData","setFormMapObjData","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","setAmenityTargetType","setZoom","cameraLength","setCameraLength","statsParentRef","labelRef","currentHoveredObject","setCurrentHoveredObject","meshObjectContext","body","cursor","currKioskFloorIndex","kioskError","kioskMapObjName","currKioskMeshParams","flat","currKioskLogo","handleMeshObjectContext","logoParams","stopPropagation","targetId","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","Canvas","Number","Stats","stats","parent","intensity","top","left","fontWeight","fontSize","mapData","setMapData","display_app","desktop","tablet","mobile","isMapIt2Response","view"],"mappings":"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"}