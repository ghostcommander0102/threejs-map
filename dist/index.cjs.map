{"version":3,"file":"index.cjs","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/globals.ts","../src/helpers/misc.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/helpers/draw.logo.helpers.ts","../src/Hooks/useMeshFloors/index.tsx","../src/defaults.ts","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/Map.tsx","../src/components/SceneComponent/FloorsMap.tsx","../src/helpers/camera.helpers.ts","../src/components/UIComponent/FloorSelector.tsx","../src/components/Icons/ATM.tsx","../src/components/Icons/DogPoopStation.tsx","../src/components/Icons/Elevator.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Icons/Management.tsx","../src/components/Icons/PlayArea.tsx","../src/components/Icons/Restroom.tsx","../src/components/Icons/Security.tsx","../src/components/UIComponent/index.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\r\nimport {IFloorData} from \"../../types\";\r\n\r\nexport function next_node_name(node_count: number) {\r\n    return 'node-' + node_count;\r\n}\r\n\r\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\r\n    let exists = false;\r\n    let node_name:string = '-name-not-found-';\r\n    const currentFloor = floors[floor_index];\r\n    if (currentFloor.route_points !== undefined) {\r\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\r\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\r\n                exists = true;\r\n                node_name = currentFloor.route_points[i].name;\r\n                break;\r\n            }\r\n        }\r\n        if (!exists) {\r\n            node_name = next_node_name(node_count);\r\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\r\n        }\r\n    }\r\n    return [node_name, exists];\r\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\r\nimport { SVGResultPaths } from \"three-stdlib\";\r\nimport {Graph} from \"ngraph.graph\";\r\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\r\nimport {get_node_name} from \"./nodesUtils\";\r\nimport {MeshType} from \"./getMaterialAndGeometry\";\r\nimport { IConfig, IFloorData } from \"../../types\";\r\n\r\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\r\n    const consolePrefix = 'MeshParams';\r\n    let mesh_type:MeshType = null;\r\n    var layer_color: Color | string = path.color.clone();\r\n    var extrude = 0;\r\n    var z_index = 0;\r\n    var mesh_visible = true;\r\n    var mesh_draw = true;\r\n    var mesh_transparent = false;\r\n    var line_thickness = config.WALL_THICKNESS;\r\n    var interactiveMesh = true;\r\n    var layer_name = path.userData?.node.id;\r\n    if (layer_name != undefined) {\r\n        if (layer_name.startsWith('boundary')) {\r\n            mesh_type = 'boundary';\r\n            layer_color = config.BOUNDARY_COLOR;\r\n            line_thickness = config.BOUNDARY_THICKNESS;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 9;\r\n            }\r\n        } else if (layer_name.startsWith('wall')) {\r\n            mesh_type = 'wall';\r\n            layer_color = config.WALL_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 8.5;\r\n            }\r\n        } else if (layer_name.startsWith('outer-wall')) {\r\n            mesh_type = 'outer-wall';\r\n            layer_color = config.WALL_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                mesh_draw = false;\r\n            }\r\n        } else if (layer_name.startsWith('building-base')) {\r\n            mesh_type = 'building-base';\r\n            layer_color = config.BUILDING_BASE_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 12;\r\n                z_index = -12;\r\n            }\r\n        } else if (layer_name.startsWith('base')) {\r\n            mesh_type = 'base';\r\n            layer_color = config.BASE_COLOR;\r\n        } else if (layer_name.startsWith('store')) {\r\n            mesh_type = 'store';\r\n            layer_color = config.STORE_DEFAULT_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 8;\r\n            }\r\n            if (layer_name.startsWith('store-underlay')) {\r\n                interactiveMesh = false;\r\n            }\r\n        } else if (layer_name.startsWith('big-store')) {\r\n            mesh_type = 'big-store';\r\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\r\n            if (config.STYLE == '3D') {\r\n                extrude = 16;\r\n            }\r\n        } else if (layer_name.startsWith('route-path')) {\r\n            mesh_type = 'route-path';\r\n            mesh_draw = false;\r\n            path.subPaths.forEach(subPath => {\r\n                if (subPath.curves.length == 0) {\r\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\r\n                }\r\n\r\n                subPath.curves.forEach(curve => {\r\n                    //@ts-ignore\r\n                    const v1:Vector2 = curve.v1;\r\n                    //@ts-ignore\r\n                    const v2:Vector2 = curve.v2;\r\n\r\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\r\n                    if (!exists1) {\r\n                        floors[floor_index].route_points?.push({\r\n                            name: node1_name,\r\n                            node: new Vector3(v1.x, v1.y, 1)\r\n                        });\r\n                        allNodesFloor[node1_name] = floor_index;\r\n                    }\r\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\r\n                    if (!exists2) {\r\n                        floors[floor_index].route_points?.push({\r\n                            name: node2_name,\r\n                            node: new Vector3(v2.x, v2.y, 1)\r\n                        });\r\n                        allNodesFloor[node2_name] = floor_index;\r\n                    }\r\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\r\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\r\n\r\n                    // pathFinderGraph.addLink(node1_name, node2_name);\r\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\r\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\r\n                });\r\n            });\r\n        } else if (layer_name.startsWith('escalator-')) {\r\n            mesh_type = 'escalator';\r\n            mesh_visible = false;\r\n        } else if (layer_name.startsWith('kiosk-')) {\r\n            mesh_type = 'kiosk';\r\n            mesh_transparent = true;\r\n        } else if (layer_name.startsWith('amenity-')) {\r\n            mesh_type = 'amenity';\r\n            mesh_transparent = true;\r\n            z_index = 1;\r\n        } else if (layer_name.startsWith('overlay')) {\r\n            mesh_type = 'overlay';\r\n        } else if (layer_name.startsWith('special-shape')) {\r\n            mesh_type = 'special-shape';\r\n        } else {\r\n            extrude = 1;\r\n        }\r\n    } else {\r\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\r\n    }\r\n\r\n\r\n    /*console.debug({\r\n        mesh_type,\r\n        layer_color,\r\n        extrude,\r\n        z_index,\r\n        mesh_visible,\r\n        mesh_draw,\r\n        mesh_transparent,\r\n        line_thickness,\r\n        interactiveMesh,\r\n        path,\r\n        layer_name,\r\n    })*/\r\n    return {\r\n        mesh_type,\r\n        layer_color,\r\n        extrude,\r\n        z_index,\r\n        mesh_visible,\r\n        mesh_draw,\r\n        mesh_transparent,\r\n        line_thickness,\r\n        interactiveMesh,\r\n        path,\r\n        layer_name,\r\n    }\r\n}","import createGraph from \"ngraph.graph\";\nimport {IRetailer, MapObj} from \"./mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\n\nexport const meshByObjectId = new Map<string,Mesh>();\nexport const allMapObjects:string[] = [];\nexport const allIndexedMapObjects = {} as Record<string, MapObj>;\nexport const allIndexedRetailers = {} as Record<string, IRetailer>;\nexport const allNodesFloor = {} as Record<string, number>;\n\n//<{ x:number, y:number }, { weight: number }>\nexport const pathFinderGraph = createGraph();\nexport const ngraphPath = path;\n","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(parseInt('0x' + hex_code, 16));\n}","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\r\nimport {getWallShape} from \"./getWallShape\";\r\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\r\nimport {allMapObjects} from \"../../globals\";\r\nimport {IConfig, IExtMesh, IMeshValues, TMapMode} from \"../../types\";\r\nimport {hex_to_color} from \"../../helpers/misc\";\r\n\r\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\r\n\r\n\r\nconst renderOrders = {\r\n    'route-path': 0,\r\n    'escalator': 0,\r\n    'underlay': 0,\r\n    'overlay': 1,\r\n    'building-base': 1,\r\n    'base': 2,\r\n    'store': 3,\r\n    'big-store': 4,\r\n    'kiosk': 5,\r\n    'wall': 6,\r\n    'outer-wall': 7,\r\n    'boundary': 8,\r\n    'amenity': 9,\r\n    'layer-image': 10,\r\n    'layer-text': 11,\r\n    'route-tube': 12,\r\n    'special-shape': 13,\r\n};\r\n\r\nexport type MeshType = keyof typeof renderOrders | null;\r\n\r\nexport function getRenderOrder(mesh_type: MeshType): number {\r\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\r\n        return renderOrders[mesh_type];\r\n    }\r\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\r\n    return 0;\r\n}\r\n\r\nexport const getMaterialAndGeometry = (config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, mode?: TMapMode): IMeshValues => {\r\n    const consolePrefix = 'MaterialAndGeometry';\r\n\r\n    const material_settings = {\r\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\r\n        side: DoubleSide,\r\n        transparent: false,\r\n        depthWrite: true,\r\n        depthTest: true,\r\n        opacity: 1,\r\n    }\r\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\r\n        if (mesh_type != 'boundary') {\r\n            material_settings.depthWrite = false;\r\n            material_settings.depthTest = false;\r\n        }\r\n    }\r\n    if (mesh_type == 'overlay') {\r\n        material_settings.color = config.OVERLAY_COLOR;\r\n        material_settings.opacity = config.OVERLAY_OPACITY;\r\n    }\r\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\r\n        material_settings.opacity = 0;\r\n    }\r\n    var material = new MeshLambertMaterial(material_settings);\r\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\r\n        //@ts-ignore\r\n        material.colorDefault = material.color;\r\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\r\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\r\n            //@ts-ignore\r\n            material.colorDefault = material.color;\r\n        }\r\n        //@ts-ignore\r\n        material.active = false;\r\n    }\r\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\r\n        material.opacity = 0;\r\n        material.transparent = true;\r\n    }\r\n\r\n    material.transparent = material.opacity !== 1;\r\n\r\n    let shapes = path.toShapes(true);\r\n\r\n    // shapes.forEach((shape, index) => {\r\n    let extrude_meshes;\r\n    if (config.STYLE == '2D') {\r\n        extrude_meshes = ['building-base'];\r\n    } else {\r\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\r\n    }\r\n\r\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\r\n\r\n    var geometry;\r\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\r\n        geometry = new ExtrudeGeometry(shapes, {\r\n            depth: -extrude,\r\n            bevelEnabled: false,\r\n        });\r\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\r\n        //@ts-ignore\r\n        let wall_geometries = [];\r\n        //@ts-ignore\r\n        path.subPaths.forEach(subPath => {\r\n            //@ts-ignore\r\n            subPath.curves.forEach(curve => {\r\n                if (curve.type == 'LineCurve') {\r\n                    let shape_extend = 0;\r\n                    if (mesh_type == 'boundary') {\r\n                        shape_extend = 1;\r\n                    } else if (mesh_type == 'wall') {\r\n                        // shape_extend = 1 / 3;\r\n                    }\r\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\r\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\r\n                        depth: -extrude,\r\n                        bevelEnabled: false,\r\n                    });\r\n                    wall_geometries.push(wall_geometry);\r\n                } else {\r\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\r\n                }\r\n            });\r\n        });\r\n\r\n        if (wall_geometries.length == 1) {\r\n            //@ts-ignore\r\n            geometry = wall_geometries[0];\r\n        } else if (wall_geometries.length > 1) {\r\n            //@ts-ignore\r\n            geometry = mergeGeometries(wall_geometries);\r\n        } else {\r\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\r\n        }\r\n    } else {\r\n        geometry = new ShapeGeometry(shapes);\r\n        try {\r\n            //@ts-ignore\r\n            if (geometry.attributes.position.count == 0) {\r\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\r\n            }\r\n        } catch (e: any) {\r\n            console.error(e.message);\r\n        }\r\n    }\r\n\r\n    const mesh = new Mesh(geometry, material) as IExtMesh;\r\n    mesh.object_id = layer_name;\r\n    mesh.mesh_type = mesh_type;\r\n    mesh.floor_index = floor_index;\r\n    mesh.visible = mesh_visible;\r\n    mesh.position.z = z_index;\r\n    let storeName = '';\r\n    if (['retail_name', 'retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\r\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\r\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\r\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\r\n            storeName = allIndexedMapObjects[layer_name].custom_text;\r\n        }\r\n    }\r\n    mesh.userData.storeName = storeName;\r\n    if (config.STYLE == '2D') {\r\n        mesh.renderOrder = getRenderOrder(mesh_type);\r\n        if (layer_name && layer_name.includes('underlay')) {\r\n            mesh.renderOrder = getRenderOrder('underlay');\r\n        }\r\n    }\r\n\r\n    floors[floor_index].objsGroup.add(mesh);\r\n\r\n    if (mesh_type == 'escalator') {\r\n        floors[floor_index].escalatorsNodes[layer_name] = null;\r\n        floors[floor_index].escalatorsObjs.push(mesh);\r\n        mesh.escalator_id = floor_index + '-' + layer_name;\r\n    }\r\n\r\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\r\n        //@ts-ignore\r\n        mesh.route_node_id = null;\r\n\r\n        // add floor_index to the kiosks\r\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\r\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\r\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\r\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\r\n            }*/\r\n        }\r\n\r\n        if (config.ROLE == 'PORTAL') {\r\n            allMapObjects.push(layer_name);\r\n        }\r\n        if (\r\n            (config.ROLE == 'PORTAL') ||\r\n            (config.ROLE != 'PORTAL' && mesh_type == 'kiosk') ||\r\n            (config.ROLE != 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\r\n            (config.ROLE != 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\r\n            (mode === 'edit' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\r\n            (mode === 'edit' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\r\n        ) {\r\n            // if (interactiveMesh) {\r\n            floors[floor_index].interactiveObjs.push(mesh);\r\n            // }\r\n        }\r\n    }\r\n\r\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\r\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\r\n    // }\r\n\r\n    return {\r\n        mesh,\r\n        geometry,\r\n        material,\r\n        object_id: layer_name,\r\n        mesh_type,\r\n        floor_index,\r\n        visible: mesh_visible,\r\n        renderOrder: mesh.renderOrder,\r\n    }\r\n    // });\r\n\r\n}","import {LineCurve, Shape, Vector3} from \"three\";\r\n\r\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\r\n    let wallShape = new Shape();\r\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\r\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\r\n\r\n    // form help and formulas in /assets/threejs/help/\r\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\r\n    let point1_center = point1.clone().add(dir);\r\n\r\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\r\n    let point2_center = point2.clone().add(dir);\r\n\r\n    let distance = point1.distanceTo(point2_center);\r\n\r\n    let point1_above = {\r\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\r\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\r\n    };\r\n    let point1_below = {\r\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\r\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\r\n    };\r\n\r\n    let point2_above = {\r\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\r\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\r\n    };\r\n    let point2_below = {\r\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\r\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\r\n    };\r\n\r\n    wallShape.moveTo(point1_above.x, point1_above.y);\r\n    wallShape.lineTo(point1_below.x, point1_below.y);\r\n    wallShape.lineTo(point2_below.x, point2_below.y);\r\n    wallShape.lineTo(point2_above.x, point2_above.y);\r\n\r\n    // shape.moveTo(point1_above.x, point1_above.y);\r\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\r\n    // shape.lineTo(point2_below.x, point2_below.y);\r\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\r\n\r\n    return wallShape;\r\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style == '2D') {\n        route_tube.position.z = -10;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj.route_node_id;\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    });\n    return create_route(kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\r\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\r\nimport { SVGResult } from \"three-stdlib\";\r\nimport {IConfig, IFloorData, IMeshValues, TMapMode} from \"../../types\";\r\nimport {allIndexedMapObjects, allIndexedRetailers, allNodesFloor, pathFinderGraph} from \"../../globals\";\r\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\r\nimport {Raycaster} from \"three\";\r\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"helpers/route.helpers\";\r\n\r\n// TODO: get rid of this global variable\r\nlet node_count = 0;\r\n\r\nexport function loadFloors(floors:IFloorData[], config:IConfig, results:SVGResult[], mode?: TMapMode) {\r\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\r\n    // let floor = floors[floors_loaded];\r\n    // let floor_index = floors_loaded;\r\n    const escalator_nodes: string[] = [];\r\n    results.forEach((result, floor_index) => {\r\n        if (result.paths && result.paths.length) {\r\n            const pathIds = [];\r\n            for (let i = 0; i < result.paths.length; i++) {\r\n                pathIds.push(result.paths[i]?.userData?.node.id);\r\n            }\r\n            const paths = result.paths;\r\n            for (let i = 0; i < paths.length; i++) {\r\n                const {\r\n                    mesh_type,\r\n                    layer_color,\r\n                    extrude,\r\n                    z_index,\r\n                    mesh_visible,\r\n                    mesh_draw,\r\n                    mesh_transparent,\r\n                    line_thickness,\r\n                    interactiveMesh,\r\n                    path,\r\n                    layer_name,\r\n                } = getMeshParams(\r\n                    paths[i],\r\n                    paths,\r\n                    floors,\r\n                    floor_index,\r\n                    config,\r\n                    ++node_count,\r\n                    //@ts-ignore\r\n                    allNodesFloor,\r\n                    pathFinderGraph\r\n                );\r\n\r\n                if (mesh_draw) {\r\n                    const meshParams = getMaterialAndGeometry(\r\n                        config,\r\n                        mesh_type,\r\n                        layer_name,\r\n                        layer_color,\r\n                        mesh_transparent,\r\n                        mesh_visible,\r\n                        z_index,\r\n                        extrude,\r\n                        line_thickness,\r\n                        floors,\r\n                        floor_index,\r\n                        allIndexedMapObjects,\r\n                        allIndexedRetailers,\r\n                        path,\r\n                        mode\r\n                    );\r\n                    if (!GeometriesAndMaterials[floor_index]) {\r\n                        GeometriesAndMaterials[floor_index] = [];\r\n                    }\r\n\r\n                    GeometriesAndMaterials[floor_index].push(meshParams);\r\n                }\r\n            }\r\n            const findStoreNodeRaycaster = new Raycaster();\r\n            const routeNodeIds = assign_route_nodes_to_stores(\r\n                floor_index,\r\n                floors,\r\n                allIndexedMapObjects,\r\n                allIndexedRetailers,\r\n                allNodesFloor,\r\n                escalator_nodes,\r\n                findStoreNodeRaycaster,\r\n                config.ROLE\r\n            );\r\n\r\n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\r\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\r\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\r\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\r\n                    }\r\n                }\r\n            }\r\n\r\n            linkFloorEscalators(floors, pathFinderGraph);\r\n\r\n        }\r\n    })\r\n\r\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\r\n}","import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nfunction layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\n\nfunction getImageLogo(allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    if (map_obj.obj_type == 'retailer') {\n        img.src = allIndexedRetailers[map_obj.retailer_id].logo;\n    } else if (map_obj.obj_type == 'special') {\n        \n        let svg_image_name = map_obj.value;\n        if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n        if (svg_image_name) {\n            let svg_color = '222222';\n            if (map_obj.text_color != null) {\n                svg_color = map_obj.text_color;\n            }\n\n            const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n            if (!svg_block) {\n                console.error('svg_block not found', svg_image_name);\n                return;\n            }\n            const svg_element = svg_block.querySelector(\"svg\");\n            if (!svg_element) {\n                console.error('svg_element not found', svg_image_name);\n                return;\n            }\n\n            const svgColoredParts = svg_element.querySelectorAll('[fill]');\n            svgColoredParts.forEach((svgColoredPart) => {\n                svgColoredPart.setAttribute('fill', '#' + svg_color);\n            })\n\n            const svgData = (new XMLSerializer()).serializeToString(svg_element);\n            img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n        }\n        \n    } else {\n        img.src = map_obj.custom_image;\n   }\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    };\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    const map_obj = allIndexedMapObjects[object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n   ) {\n        getImageLogo(allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\n// import { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGLoader } from \"three-stdlib\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport data from \"demo/data.json\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\nimport {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"helpers/draw.logo.helpers\";\n// import { FontLoader } from \"three/examples/jsm/loaders/FontLoader\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nconst BASE_URL = 'https://test.mycenterdeals.com/data/mapit2/';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n\n    const KIOSKS:Record<string, Kiosk> = {};\n    response.kiosks.forEach((kiosk) => {\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: BASE_URL + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: null,\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK,\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: config.STYLE,\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?:IJsonConfig, mode?: TMapMode): IMeshParamsTmp => {\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(jsonConfig ?? config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            values.push(`${BASE_URL}${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(floorsData, processedConfig, result, mode);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '8',\n    // KIOSK: '51',\n    KIOSK: '108',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '-',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n};","import {useThree} from \"@react-three/fiber\";\r\nimport {Color} from \"three\";\r\n\r\ninterface IScenePropertiesProps {\r\n    background?: Color | string;\r\n}\r\n\r\nexport const SceneProperties = (params:IScenePropertiesProps) => {\r\n    const { scene } = useThree();\r\n    if (params.background) {\r\n        scene.background = new Color(params.background);\r\n    }\r\n    return null;\r\n}","import {useThree} from \"@react-three/fiber\";\r\nimport { ICameraPropertiesProps } from \"types\";\r\nimport {PerspectiveCamera} from \"three\";\r\n\r\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\r\n    const { camera } = useThree();\r\n\r\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\r\n    if (props.far) {\r\n        camera.far = props.far;\r\n    }\r\n    if (props.near) {\r\n        camera.near = props.near;\r\n    }\r\n\r\n    if (camera instanceof PerspectiveCamera) {\r\n        if (props.fov) {\r\n            camera.fov = props.fov;\r\n        }\r\n    }\r\n\r\n    if (cameraProjectionNeedsUpdate) {\r\n        camera.updateProjectionMatrix();\r\n    }\r\n\r\n    return null;\r\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = -easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import {IMeshParams, TMapMode} from \"../../types\";\r\nimport {ThreeEvent} from \"@react-three/fiber\";\r\nimport React, {MouseEventHandler} from \"react\";\r\nimport {Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB} from \"three\";\r\nimport {RouteTube} from \"./RouteTube\";\r\nimport {Html} from \"@react-three/drei\";\r\n\r\ninterface IMapProps {\r\n    floorIndex: number,\r\n    meshFloors: IMeshParams;\r\n    currKioskObj: Mesh | null;\r\n    activeObjectId?: string;\r\n    hoverObjectId?: string;\r\n    routeTube?: Mesh;\r\n    visible: boolean,\r\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\r\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\r\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\r\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\r\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>;\r\n    mode?: TMapMode;\r\n}\r\n\r\nconst getDarkerColor = (color: RGB) => {\r\n    if (color) {\r\n        var newColor = { ...color }\r\n        newColor.r = color.r * 0.92;\r\n        newColor.g = color.g * 0.92;\r\n        newColor.b = color.b * 0.92;\r\n        return newColor;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const Map = (params: IMapProps) => {\r\n    const {meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor, mode} = params;\r\n\r\n    const { config, meshParams, textParams, storeLogos} = meshFloors;\r\n    const floor = meshFloors.floors[floorIndex];\r\n\r\n    const onPointerMove = params.onPointerMove;\r\n    const onPointerOver = params.onPointerEnter;\r\n    const onPointerOut = params.onPointerLeave;\r\n    const onClick = params.onClick;\r\n\r\n    const floorMeshParams = meshParams[floorIndex];\r\n    const floorTextParams = textParams[floorIndex];\r\n    const floorStoreLogos = storeLogos[floorIndex];\r\n    const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\r\n\r\n    // console.log('Map', floorIndex, { meshParams, floorIndex, floorMeshParams, floorTextParams, floorStoreLogos, routeTubes})\r\n    return (\r\n        <group visible={visible}>\r\n            {floorMeshParams?.map((params) => {\r\n                if (!params.mesh) return null;\r\n\r\n                const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\r\n                const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\r\n                const active = activeObjectId && params.mesh.object_id === activeObjectId;\r\n                if (interactive) {\r\n                    // TODO: move those colorDefault, active, etc to userData of mesh or material\r\n                    if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\r\n                        // @ts-ignore\r\n                        const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\r\n                        //console.log('Map', {baseColor, active, hovered})\r\n                        params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\r\n                    } else {\r\n                        // @ts-ignore\r\n                        params.mesh.material.color = params.mesh.material.colorDefault;\r\n                    }\r\n                }\r\n\r\n                return <group key={params.mesh.uuid} {...(interactive? {onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\r\n                    <primitive object={params.mesh}></primitive>\r\n                </group>\r\n            })}\r\n            {floorTextParams?.map((params) => {\r\n                if (!params.textMesh) return null;\r\n                return <primitive key={params.textMesh.uuid} object={params.textMesh}>\r\n                </primitive>\r\n            })}\r\n            {floorStoreLogos?.map((params) => {\r\n                if (!params.storeLogo) return null;\r\n\r\n                return <primitive key={params.storeLogo.uuid} object={params.storeLogo}>\r\n                    {visible && params.storeLogo.userData.htmlContent? <Html>{params.storeLogo.userData.htmlContent}</Html> : null}\r\n                </primitive>\r\n            })}\r\n            {escalatorMeshes?.map((params) => {\r\n                //@ts-ignore\r\n                return <primitive key={`escalator-${params.object_id}`} object={params}>\r\n                    <Html visible={false} position={params.geometry.boundingSphere?.center}>\r\n                        <div onClick={handleChangeFloor(params.goToFloor?.index || 0)} id=\"escalator_elems\" style={{ display: visible ? 'block' : 'none' }}>\r\n                            <div className=\"element\" id={params.object_id as string}>\r\n                                <div className=\"label\">{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Html>\r\n                </primitive>\r\n            })}\r\n            <RouteTube mesh={routeTube} />\r\n        </group>\r\n    )\r\n}","import {IExtMesh, IFloorData, IMeshParams, TMapMode} from \"../../types\";\nimport {Map} from \"./Map\";\nimport React, {MouseEventHandler, useCallback, useEffect, useRef, useState} from \"react\";\nimport {Group, Mesh, PerspectiveCamera, Vector3} from \"three\";\nimport {ThreeEvent, useThree} from \"@react-three/fiber\";\nimport {get_camera_focus_object} from \"../../helpers/camera.helpers\";\nimport {MapControls} from \"@react-three/drei\";\nimport {create_route, make_amenity_route} from \"../../helpers/route.helpers\";\nimport {allIndexedMapObjects} from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\n\ninterface IFloorsMapProps {\n    meshFloors: IMeshParams;\n    currentFloorIndex: number;\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    onCameraMove?: (e: any) => void;\n    currKioskObj: Mesh;\n    routeTargetId?: string;\n    amenityTargetType: string;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>,\n    escalatorNodes: string[];\n    zoom: IZoomData | null;\n    mode?: TMapMode;\n}\n\n\nexport const FloorsMap = (params:IFloorsMapProps) => {\n    const { meshFloors, currentFloorIndex, currKioskObj, routeTargetId, amenityTargetType, handleChangeFloor, escalatorNodes, zoom, mode } = params;\n    const { floors } = meshFloors;\n\n    const groupRef = useRef<Group>(null);\n    const [ routeTubes, setRouteTubes ] = useState<Mesh[]>([]);\n    const mapControlRef = useRef<any>(null);\n    const { camera, scene } = useThree();\n    const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n    const style = meshFloors.config.STYLE;\n    const accentColor = meshFloors.config.ACCENT_COLOR;\n    const pathFinderGraph = meshFloors.pathFinderGraph;\n    const from = (currKioskObj as IExtMesh).object_id;\n\n    useEffect(() => {\n        (() => {\n            let n = 0;\n            scene.traverse(() => ++n);\n\n            console.debug('Count:', n);\n        })()\n    }, [params.meshFloors, scene])\n\n    useEffect(() => {\n        if (!amenityTargetType || mode === 'edit') {\n            setRouteTubes([]);\n            return;\n        }\n        const route = make_amenity_route(from?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n        setRouteTubes(route);\n    }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n    useEffect(() => {\n        if (!from || !routeTargetId || mode === 'edit') {\n            setRouteTubes([]);\n            return;\n        }\n        if (!amenityTargetType) {\n            floors.forEach(floor => {\n                floor.escalatorMeshes = [];\n            });\n        }\n\n\n        console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n        /* MAKE ROUTE PATH */\n\n        const route = create_route(from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n        // TODO: activate object (moved out of create_route function)\n        // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n        // TODO: focus object (moved out of create_route function)\n        // if (!routePaths.length) {\n        //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n        //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n        //     camera.position.copy(position);\n        // }\n\n\n        console.log('new route', route)\n        setRouteTubes(route);\n\n    }, [ from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes ]);\n\n    const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n    useEffect(() => {\n\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let meshes:Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const cameraSpeed = 0.1; // per second\n        const targetSpeed = 0.1;\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, style);\n        const distance = mapControlRef.current.object.position.distanceTo(focus.position);\n        const targetDistance = mapControlRef.current.target.distanceTo(focus.target);\n        cameraFocus.current = {\n            ...focus,\n            animationStartTime: performance.now(),\n            cameraTime: targetDistance/cameraSpeed/1000, // how long it takes to move camera to get to new position\n            targetTime: targetDistance/targetSpeed/1000, // how long it takes to move camera to get to new position\n        };\n        // console.log({focus, meshes, camera});\n\n        mapControlRef.current.target.copy(focus.target);\n        mapControlRef.current.object.position.copy(focus.position);\n        mapControlRef.current.object.lookAt(focus.target);\n        mapControlRef.current.object.updateProjectionMatrix();\n\n\n        return () => {\n            cameraFocus.current = null;\n        };\n    }, [ routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId ]);\n\n    useEffect(() => {\n        if (zoom?.direction && mapControlRef.current) {\n            const vector = new Vector3();\n            vector.copy(mapControlRef.current.target);\n            vector.sub(mapControlRef.current.object.position);\n            vector.setLength(vector.length() * 0.4);\n\n            if (zoom.direction === 'in') {\n                camera.position.add(vector);\n            } else {\n                camera.position.sub(vector);\n            }\n        }\n    }, [zoom])\n\n    const onCameraMove = useCallback((e: any) => {\n        // console.warn('onCameraMove', e);\n        // debugger\n        cameraFocus.current = null;\n    }, [])\n\n    // useFrame(() => {\n    //     if (cameraFocus.current) {\n    //         console.log('animate camera')\n    //         const focus = cameraFocus.current;\n    //         const animationTime = performance.now() - focus.animationStartTime;\n    //         const cameraProgress = Math.min(1, animationTime / focus.cameraTime);\n    //         const targetProgress = Math.min(1, animationTime / focus.targetTime);\n    //         console.log({cameraProgress, targetProgress, animationTime, focus});\n    //\n    //         mapControlRef.current.target.lerp(focus.target, targetProgress);\n    //         mapControlRef.current.object.position.lerp(focus.position, cameraProgress);\n    //         mapControlRef.current.object.lookAt(focus.target);\n    //         mapControlRef.current.object.updateProjectionMatrix();\n    //\n    //         if (cameraProgress === 1 && targetProgress === 1) {\n    //             cameraFocus.current = null;\n    //         }\n    //     }\n    // })\n\n    return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n        <>\n            <MapControls\n\n                onChange={onCameraMove}\n                ref={mapControlRef}\n                maxPolarAngle={Math.PI / 2}\n                />\n\n            {floors && floors.map(( value: IFloorData, index: number) => (\n                <Map\n                    key={`Map-${index}`}\n                    visible={currentFloorIndex === index}\n                    floorIndex = {index}\n                    currKioskObj={params.currKioskObj}\n                    activeObjectId={params.activeObjectId}\n                    hoverObjectId={params.hoverObjectId}\n                    meshFloors={meshFloors}\n                    routeTube={routeTubes && routeTubes[index]}\n                    onPointerEnter={params.onPointerEnter}\n                    onPointerLeave={params.onPointerLeave}\n                    onPointerMove={params.onPointerMove}\n                    onClick={params.onClick}\n                    handleChangeFloor={handleChangeFloor}\n                    mode={mode}\n                />\n            ))}\n        </>\n    </group>)\n}","import type {Mesh} from \"three\";\r\nimport {Box3, Vector3} from \"three\";\r\n\r\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\r\n    // config.STYLE\r\n    // config.CAMERA.fov\r\n\r\n    if (!Array.isArray(objs)) {\r\n        objs = [objs];\r\n    }\r\n    if (!objs.length) {\r\n        console.warn('get_camera_focus_object: no objects passed');\r\n        return { position: new Vector3(), target: new Vector3() };\r\n    }\r\n\r\n    const objsBoundingBox = objs.reduce((box, obj) => {\r\n        if (!obj.geometry.boundingBox) {\r\n            obj.geometry.computeBoundingBox();\r\n        }\r\n        if (obj.geometry.boundingBox) {\r\n            box.union(obj.geometry.boundingBox);\r\n        }\r\n        return box;\r\n    }, new Box3());\r\n\r\n    const obj_size = new Vector3();\r\n    objsBoundingBox.getSize(obj_size);\r\n\r\n    const center = new Vector3();\r\n    objsBoundingBox.getCenter(center);\r\n\r\n    objs[0].localToWorld(center);\r\n\r\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\r\n    // var padding = max_length * 0.2;\r\n    // if (padding > 50) padding = 50;\r\n    // max_length += padding;\r\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\r\n\r\n    let tanFOV = Math.tan(Math.PI * fov / 360);\r\n    let padding = 1.1;\r\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\r\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\r\n    let new_y = Math.max(new_width, new_height);\r\n    let new_z = getCameraTiltPosition(new_y, style);\r\n\r\n    const target = new Vector3(center.x, 0, center.z);\r\n    const position = new Vector3(center.x, new_y, center.z + new_z);\r\n\r\n    // createjs.Ticker.framerate = 60;\r\n    // createjs.Tween.get(config.CONTROLS.target)\r\n    //     .to({ x: center.x, z: center.z }, 400);\r\n    // createjs.Tween.get(config.CAMERA.position)\r\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\r\n\r\n    return {position, target};\r\n}\r\n\r\nfunction getCameraTiltPosition(y:number, style:string): number {\r\n    let angle = 60;\r\n    if (style == '2D') angle = 89.9;\r\n    return y / Math.tan(angle * Math.PI / 180);\r\n}","import { IFloorSelectorProps } from \"types\";\nimport styles from '../../MapBox.module.css';\n\ntype TFloorButtonProps = {\n    isActive: boolean,\n    onClick: (e: any) => void,\n    text: string,\n}\n\nconst FloorButton = ({isActive, onClick, text }: TFloorButtonProps) => {\n    return (\n\n        <div\n            className={`${styles.floor} ${styles.control_btn} ${isActive ? styles.active : ''}`} onClick={onClick}\n        >\n            {text}\n        </div>\n    )\n}\n\nconst FloorSelector = ({floors, selectedFloorIndex, handleFloorChange, accentColor}: IFloorSelectorProps) => {\n    const floorButtons: Array<TFloorButtonProps & {key: string}> = [];\n    for (let i = 0; i < floors; i++) {\n        const style = {display: 'flex', cursor: 'pointer', background: 'white'};\n        if (i === selectedFloorIndex) {\n            style.background = accentColor;\n        }\n        floorButtons.push({\n            key: `floor-change-btn-${i}`,\n            isActive: i === selectedFloorIndex,\n            onClick: handleFloorChange(i),\n            text: `Floor ${i + 1}`,\n        })\n    }\n\n    return (\n        <div className={`${styles.floors} ${styles.btn_group}`}>\n            {floorButtons.map(value => <FloorButton key={value.key} isActive={value.isActive} onClick={value.onClick} text={value.text} ></FloorButton>)}\n        </div>\n    );\n}\n\nexport default FloorSelector;\n","const ATM = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n        </svg>\n    )\n}\n\nexport default ATM;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","\nconst Elevator = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n        </svg>\n    )\n}\n\nexport default Elevator;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst Management = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Management;","\nconst PlayArea = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default PlayArea;","\nconst Restroom = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Restroom;","\nconst Security = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Security;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TMapMode } from \"types\"\nimport FloorSelector from \"./FloorSelector\"\nimport { MouseEventHandler } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport ATM from \"components/Icons/ATM\";\nimport DogPoopStation from \"components/Icons/DogPoopStation\";\nimport Elevator from \"components/Icons/Elevator\";\nimport FamilyRestroom from \"components/Icons/FamilyRestroom\";\nimport Management from \"components/Icons/Management\";\nimport PlayArea from \"components/Icons/PlayArea\";\nimport Restroom from \"components/Icons/Restroom\";\nimport Security from \"components/Icons/Security\";\n\nconst Names = ['atm', 'dog-poop-station', 'elevator', 'family-restroom', 'management', 'playarea', 'restroom', 'security'] as const;\n\ntype TIconName = (typeof Names)[number];\n\ntype TAmenityIconProps = {\n    type: TIconName,\n}\n\ntype TElement =  undefined | (() => JSX.Element);\n\nconst AmenityIcon = ({type}: TAmenityIconProps) => {\n    let name: TElement;\n    name = undefined;\n\n    switch (type) {\n        case 'atm':\n                name = ATM;\n            break;\n        case 'dog-poop-station':\n                name = DogPoopStation;\n            break;\n        case 'elevator':\n                name = Elevator;\n            break;\n        case 'family-restroom':\n                name = FamilyRestroom;\n            break;\n        case 'management':\n                name = Management;\n            break;\n        case 'playarea':\n                name = PlayArea;\n            break;\n        case 'restroom':\n                name = Restroom;\n            break;\n        case 'security':\n                name = Security;\n            break;\n    \n        default:\n            break;\n    }\n    if (name !== undefined) {\n        const Comp = name;\n        return (\n            <>\n                <Comp></Comp>\n            </>\n        )\n    } else {\n        return null;\n    }\n\n}\n\n\nconst UIComponent = ({\n    floors,\n    accentColor,\n    selectedFloorIndex,\n    handleFloorChange,\n    amenitiesList,\n    zoomIn,\n    zoomOut,\n    reset,\n    clearRoute,\n    handleAmenityClick,\n    mode,\n}: IFloorSelectorProps & {\n    amenitiesList: IAmenitiesInteractiveList[],\n    zoomIn?: MouseEventHandler<HTMLDivElement>,\n    zoomOut?: MouseEventHandler<HTMLDivElement>,\n    reset?: () => void,\n    clearRoute?: MouseEventHandler<HTMLDivElement>,\n    handleAmenityClick: (type: string) => void,\n    mode?: TMapMode,\n}\n) => {\n    const handleResetClick: MouseEventHandler = (e) => {\n        e.preventDefault();\n        if (reset instanceof Function) {\n            reset();\n        }\n    }\n return(\n        <div id={styles['threejs-map-wrapper']}>\n            <div id={styles['threejs-map']}>\n                <div id={styles['map_controls']} className={`${!floors? 'hide' : ''}`}>\n                    <div className={styles['btn_group']}>\n                        <div onClick={handleResetClick} className={`${styles['reset']} ${styles['control_btn']}`}>RESET</div>\n                        <div onClick={clearRoute} className={`${styles['clear_route']} ${styles['control_btn']} ${clearRoute? '' : styles.hide}`}>Clear Route</div>\n                    </div>\n                    <FloorSelector  accentColor={accentColor} floors={floors} selectedFloorIndex={selectedFloorIndex} handleFloorChange={handleFloorChange}/>\n                    <div className={`${styles['btn_group']} ${styles['zoom_btns']}`}>\n                        <div onClick={zoomOut} className={`${styles['zoom-out']} ${styles['control_btn']}`}>–</div>\n                        <div onClick={zoomIn} className={`${styles['zoom-in']} ${styles['control_btn']}`}>+</div>\n                    </div>\n                </div>\n                <div id={styles['mapit2_loader']} className={styles['hide']}>Loading map, please wait...</div>\n                    {mode !== 'edit' &&\n                        <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n                            {amenitiesList.map((amenity, index) => (\n                                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                                    <div className={styles.img}>\n                                        <AmenityIcon type={amenity.type as TIconName}></AmenityIcon>\n                                        {/* <img src={amenity.imageUrl} alt=\"\" /> */}\n                                    </div>\n                                    <div className={`${styles.name}`}>{amenity.name}</div>\n                                </div>\n                            ))}\n                        </div>\n                    }\n            </div>\n        </div>\n )   \n}\n\nexport default UIComponent;\n","import React, {useEffect} from \"react\";\n\nexport const MapCenterMarker = () => {\n    const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n    // todo figure out better way\n    useEffect(() => {\n        if (!kioskElementRef.current) return;\n        const kioskElement = kioskElementRef.current;\n        const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n        let svgClone:Node;\n        if (svgOrigin) {\n            svgClone = svgOrigin.cloneNode(true);\n            kioskElement.appendChild(svgClone);\n        }\n\n        return () => {\n            if (svgClone) {\n                kioskElement.removeChild(svgClone);\n            }\n        }\n    }, []);\n\n    return <>\n        <div className=\"mapCenterMarker\"></div>\n        <div className=\"kioskMarker\" ref={kioskElementRef}></div>\n    </>\n}","import { createContext, useContext, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IExtMesh } from \"types\";\n\n\ntype TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>>;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext | null>(null);\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import { HtmlProps } from \"@react-three/drei/web/Html\";\nimport { useThree } from \"@react-three/fiber\";\nimport { useMeshObjectContext } from \"contexts/MeshObjectContextProvider\";\nimport { hex_to_color } from \"helpers/misc\";\nimport { MapObj } from \"mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\n\n\n\ninterface IMapboxForm {\n    data: any;\n    setData: (data: unknown) => void;\n    selectedId: string;\n    centerId: string;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId} = params;\n\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj>(getDefaultMapOjbValues(centerId));\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [isPending, startTransition] = useTransition();\n\n    const handleChangeTab = (k:  any | null) => {\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key && mainTabKey !== key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                if (formData.id && formData.layer_type !== key && retailerTabsKey && key && retailerTabsKey !== key) {\n                    formData.layer_type = key;\n                    setRetailerTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    })\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key && specialTabsKey !== key) {\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData({...data});\n        }\n    }\n\n    const handleReset = () => {\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        // setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData({ ...data });\n            // if (timeoutRef.current) {\n            //     clearTimeout(timeoutRef.current);\n            // }\n\n            // timeoutRef.current = setTimeout(() => {\n            // }, 300);\n        }\n    }\n\n    const handleChangeRetailer = (e: any) => {\n        if (e.target.value) {\n            formData.retailer_id = e.target.value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n            formData.custom_image = value;\n            setFormData({...formData});\n            updateData({...formData});\n        }\n        context?.MeshObject?.forEach((obj, index) => {\n            if (index === 0) return;\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                obj.userData.position.copy(obj.position);\n            }\n            const position = new Vector3();\n            position.copy(obj.userData.position);\n            switch (name) {\n                case 'custom_text':\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        let text_geometry = new TextGeometry(formData.custom_text, {\n                            font: obj.userData.font,\n                            size: parseInt(formData.size),\n                            height: 0.01,\n                            curveSegments: 4,\n                        });\n                        text_geometry.center();\n                        obj.geometry.dispose();\n                        obj.geometry = text_geometry;\n                    }\n                    break;\n                case 'custom_image':\n                    formData.custom_image = value;\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData.retail_name) {\n                            text = obj.userData.retail_name;\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        let text_geometry = new TextGeometry(text, {\n                            font: obj.userData.font,\n                            size: parseInt(formData.size),\n                            height: 0.01,\n                            curveSegments: 4,\n                        });\n                        text_geometry.center();\n                        obj.geometry.dispose();\n                        obj.geometry = text_geometry;\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity', 'kiosk'].includes(formData.layer_type)) {\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } \n                    break;\n\n                case 'rotate':\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    formData.bg_color = value;\n                    updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => setFormData({ ...formData }));\n        })\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n        }\n    }, [formData])\n\n\n    return (\n        <>\n            {/* \n            //@ts-ignore */}\n            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            <Tabs\n                id=\"main-tab-form\"\n                activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n                className=\"mb-3\"\n                justify\n            >\n                <Tab eventKey=\"retailer\" title=\"Retailer\">\n                    <Form.Select className=\"mb-3\" aria-label=\"Choose a Retailer\" value={formData.retailer_id?? ''} onChange={handleChangeRetailer}>\n                        <option value={''} disabled hidden>Choose a Retalier...</option>\n                        {data.retailers?.map((value: any) => <option key={`retailer-${value.id}`} value={value.id}>{value.retail_name} - {value.location}</option>)}\n                    </Form.Select>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                </Tab>\n                <Tab eventKey=\"special\" title=\"Special\">\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any) => <option key={`kiosk-${value.id}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                </Tab>\n                <Tab eventKey=\"custom\" title=\"Custom\">\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                </Tab>\n            </Tabs>\n            <Form.Group className=\"mb-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"2\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            name=\"size\"\n                            type=\"number\"\n                            value={formData.size}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"2\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            name=\"rotate\"\n                            type=\"number\"\n                            value={rotation?? formData.rotate}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"2\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            name=\"offsetX\"\n                            type=\"number\"\n                            value={formData.offsetX}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"2\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            name=\"offsetY\"\n                            type=\"number\"\n                            value={formData.offsetY}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"6\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={formData.bg_color}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"3\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={formData.bg_color}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={formData.text_color}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={formData.text_color}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={formData.text_color}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={formData.text_color}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\n","import React, {MouseEventHandler, useCallback, useEffect, useMemo, useRef, useState} from \"react\";\nimport {Canvas, ThreeEvent, useThree} from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"Hooks/useMeshFloors\";\nimport {SceneProperties} from \"./SceneProperties\";\nimport {CameraProperties} from \"./CameraProperties\";\nimport {Mesh, Object3D} from \"three\";\nimport {IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, TMapMode} from \"types\";\nimport {FloorsMap} from \"./FloorsMap\";\nimport {useMapit2Data} from \"../../useMapit2Data\";\nimport {MapIt2Response} from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"components/UIComponent\";\nimport {MapCenterMarker} from \"./MapCenterMarker\";\nimport { delete_route_path } from \"helpers/route.helpers\";\nimport { useMeshObjectContext } from \"contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.css';\n\nconst amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        imageUrl: '/assets/threejs/assets/img/amenities/atm.svg?color=FFFFFF',\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        imageUrl: '/assets/threejs/assets/img/amenities/management.svg?color=FFFFFF',\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        imageUrl: '/assets/threejs/assets/img/amenities/playarea.svg?color=FFFFFF',\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        imageUrl: '/assets/threejs/assets/img/amenities/restroom.svg?color=FFFFFF',\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        imageUrl: '/assets/threejs/assets/img/amenities/elevator.svg?color=FFFFFF',\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        imageUrl: '/assets/threejs/assets/img/amenities/security.svg?color=FFFFFF',\n    },\n] \n\ninterface ISceneComponentProps {\n    CENTER_ID?: string;\n    mapitData?: MapIt2Response;\n    config?: IJsonConfig;\n    stats?: boolean;\n    selectedActiveObjectId: string;\n    setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n    mode?: TMapMode;\n    handleChangeMapitData: (data: unknown) => void;\n}\n\nexport interface IZoomData {\n    direction: 'in' | 'out';\n}\n\nconst SceneComponent = (params:ISceneComponentProps) => {\n    const data = useMapit2Data({ mapitData:params.mapitData, CENTER_ID: params.CENTER_ID });\n    const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n\n    const { selectedActiveObjectId, setSelectedActiveObjectId } = params;\n\n    const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n    const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n    const handleFloorChange = (floorIndex: number): MouseEventHandler<HTMLDivElement> => (e) => {\n        setSelectedFloorIndex(floorIndex);\n    }\n\n    const { mode, handleChangeMapitData } = params;\n\n    const meshFloors = useMeshFloors(data, params.config, mode);\n    const mapCenterMarkerRef = useRef(null);\n    const labelRef = useRef<HTMLDivElement>(null);\n    const [ currentHoveredObject, setCurrentHoveredObject ] = useState<Object3D | null>(null);\n    const meshObjectContext = useMeshObjectContext();\n\n    const config = meshFloors.config;\n    const floors = meshFloors.floors;\n    const meshParams = meshFloors.meshParams;\n\n\n    // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n    let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n    if (selectedActiveObjectId) {\n        activeObjectId = selectedActiveObjectId;\n    } else if (amenityTargetType) {\n        activeObjectId = '';\n    }\n\n    useEffect(() => {\n        // console.log('useEffect currentHoveredObject', currentHoveredObject)\n        document.body.style.cursor = currentHoveredObject? 'pointer' : 'default';\n    }, [currentHoveredObject]);\n\n    const [ currKioskObj, currKioskFloorIndex, kioskError ]: [ Mesh | null, number, string ] = useMemo(() => {\n        if (!config) {\n            return [ null, 0, '' ] // not an error - loading/initializing\n        }\n        let kioskError = '';\n        let currKioskObj: Mesh | null = null;\n        let currKioskFloorIndex = 0;\n        if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n            // console.log('looking for kiosk', config.KIOSK, config.KIOSKS[config.KIOSK])\n            // console.log('config.KIOSKS', config.KIOSKS)\n            // console.log('meshParams', meshParams)\n            const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n            const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n            if (currKioskMeshParams) {\n                currKioskObj = currKioskMeshParams.mesh;\n                currKioskFloorIndex = currKioskMeshParams.floor_index;\n            }\n        } else {\n            if (config?.ROLE === 'WEBSITE') {\n                kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n            }\n\n            console.error('Kiosk not found in config');\n            kioskError = 'Map initialization error';\n        }\n\n        return [ currKioskObj, currKioskFloorIndex, kioskError]\n    }, [config, meshParams]);\n\n    const resetHandle = () => {\n        setSelectedFloorIndex(currKioskFloorIndex);\n        setSelectedActiveObjectId('');\n    }\n\n    useEffect(() => {\n        const currKioskLogo = meshFloors.storeLogos.flat().find(storeLogo => storeLogo.storeLogo.object_id === 'custom-layer-' + (currKioskObj as IExtMesh).object_id)?.storeLogo;\n        if (currKioskLogo && mode !== 'edit') {\n            currKioskLogo.userData.htmlContent = <MapCenterMarker />\n        }\n        return () => {\n            if (currKioskLogo) {\n                currKioskLogo.userData.htmlContent = null;\n            }\n        }\n    }, [meshFloors, currKioskObj]);\n\n    useEffect(() => {\n        if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId && meshObjectContext?.SetMeshObject) {\n            const object = meshFloors.meshParams[selectedFloorIndex === -1? 0 : selectedFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n            if (object) {\n                //@ts-ignore\n                handleMeshObjectContext(object);\n            }\n            //@ts-ignore\n        }\n    }, [meshFloors])\n\n    const handleMeshObjectContext = (object: IExtMesh) => {\n        if (meshObjectContext?.SetMeshObject) {\n            const textParams = meshFloors.textParams[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const logoParams = meshFloors.storeLogos[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const result = [object as IExtMesh];\n\n            if (textParams) {\n                result.push(textParams.textMesh);\n            }\n\n            if (logoParams) {\n                result.push(logoParams.storeLogo)\n            }\n\n            meshObjectContext.SetMeshObject([...result]);\n        }\n    }\n\n    const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n        e.stopPropagation();\n        // console.log('onClick', e.object)\n\n        const targetId = (e.object as IExtMesh).object_id;\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n        // console.log('set active object', targetId);\n        setAmenityTargetType('');\n    }, [selectedFloorIndex, meshFloors.meshParams.length]);\n\n    const handleAmenityClick = useCallback((type: string) => {\n        setAmenityTargetType(type)\n        setSelectedActiveObjectId('')\n    }, []);\n\n    const onCameraMove = useCallback((e: any) => {\n        if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n            return\n        }\n    }, []);\n\n    const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerEnter', e.object)\n        if (!e.object.userData.storeName) {\n            // console.warn('onPointerEnter no storeName', e.object);\n            return;\n        }\n        setCurrentHoveredObject(e.object);\n    }, []);\n\n    const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerLeave', e.object)\n        setCurrentHoveredObject(null);\n    }, []);\n\n    const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerMove', e.object)\n\n        if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n            labelRef.current.style.top = `${e.offsetY - 65}px`;\n            labelRef.current.style.left = `${e.offsetX}px`;\n            labelRef.current.style.display = 'block';\n        }\n    }\n\n    if (!config || !meshFloors.meshParams.length) {\n        console.warn('LOADING MAP')\n        return <div>Loading Map</div>\n    }\n\n    if (kioskError) {\n        return <div>{kioskError}</div>\n    }\n\n    const currentFloorIndex = selectedFloorIndex > -1 ? selectedFloorIndex : currKioskFloorIndex;\n\n    if (!currKioskObj) {\n        console.error('NO KIOSK OBJECT FOUND');\n        return <div>Map initialization error</div>\n    }\n\n    // make sure that meshFloors conditionals are not null\n    const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n    let hoverObject = currentHoveredObject as IExtMesh\n    let hoverObjectId = '';\n    if (hoverObject && hoverObject.object_id) {\n        hoverObjectId = hoverObject.object_id;\n    }\n\n\n\n    return (\n        <>\n            {mode === 'edit' &&\n                <div className={styles['mapbox-admin-form']}>\n                    <MapboxForm\n                        data={data}\n                        setData={handleChangeMapitData}\n                        selectedId={selectedActiveObjectId}\n                        centerId={params.CENTER_ID as string}\n                    />\n                </div>\n            }\n            <div style={{ position: 'relative' }}>\n                <UIComponent accentColor={config.ACCENT_COLOR.getStyle()} floors={floors.length} selectedFloorIndex={currentFloorIndex} handleFloorChange={handleFloorChange} amenitiesList={amenitiesList} handleAmenityClick={handleAmenityClick} reset={resetHandle} zoomIn={() => setZoom({ direction: 'in' })} zoomOut={() => setZoom({ direction: 'out' })} mode={mode} />\n                <Canvas flat>\n                    {/* {params.stats? <Stats /> : null } */}\n                    <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n                    <CameraProperties near={1} far={10000} />\n                    {/*<axesHelper args={[5000]} />*/}\n\n                    <ambientLight intensity={1} color={'#c4c4c4'} />\n                    <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n                    <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n                    <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n                    <FloorsMap\n                        onCameraMove={onCameraMove}\n                        meshFloors={meshFloorsChecked}\n                        activeObjectId={activeObjectId}\n                        hoverObjectId={hoverObjectId}\n                        currKioskObj={currKioskObj}\n                        routeTargetId={activeObjectId}\n                        currentFloorIndex={currentFloorIndex}\n                        onPointerEnter={onPointerEnter}\n                        onPointerLeave={onPointerLeave}\n                        onPointerMove={onPointerMove}\n                        onClick={onClick}\n                        handleChangeFloor={handleFloorChange}\n                        amenityTargetType={amenityTargetType}\n                        escalatorNodes={meshFloors.escalator_nodes}\n                        zoom={zoom}\n                        mode={mode}\n                    />\n                </Canvas>\n                <div ref={labelRef}\n                    style={{\n                        position: 'absolute',\n                        padding: 10,\n                        background: '#ffffff',\n                        fontWeight: 600,\n                        color: '#000000',\n                        fontSize: 16,\n                        display: currentHoveredObject ? 'block' : 'none',\n                        top: 300,\n                        left: 400,\n                        opacity: .8,\n                    }}\n                >\n                    <div>\n                        {currentHoveredObject && currentHoveredObject.userData.storeName}\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n};\n\n\n\nexport default SceneComponent;\n","import {useEffect, useState} from \"react\";\nimport {MapIt2Response} from \"./mapitApiTypes\";\n\ninterface useMapIt2DataProps {\n    CENTER_ID?: string;\n    mapitData?: MapIt2Response;\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData }: useMapIt2DataProps) {\n    const [data, setData] = useState<MapIt2Response|null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n        // const url = '/data/mapit2/' + CENTER_ID + '.json';\n        const url = `https://test.mycenterdeals.com/api/mapit2/data?center=${CENTER_ID}&time=1693919608355`;\n        console.log('URL', url);\n\n        fetch(url)\n            .then(response => response.json())\n            .then((response: MapIt2Response) => {\n                setData({...response});\n            });\n\n    }, [CENTER_ID, mapitData]);\n\n    return data;\n}","import React, { useEffect, useState } from 'react';\nimport styles from './MapBox.module.css';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport {isMapIt2Response, MapIt2Response} from \"./mapitApiTypes\";\nimport {IJsonConfig, TMapMode} from \"./types\";\nimport MeshObjectContextProvider from 'contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport interface IAppProps {\n    CENTER_ID?: string;\n    mapitData?: unknown;\n    config?: IJsonConfig;\n    stats?: boolean;\n    mode: TMapMode;\n}\n\nfunction MapBox({ CENTER_ID, mapitData, config, stats, mode }: IAppProps) {\n\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<unknown>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  const handleChangeMapitData = (newData: unknown) => {\n    setMapData(newData);\n  }\n\n  if (!mapitData && !CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  return (\n    <MeshObjectContextProvider>\n      <div className={`${styles['mapbox-component']} ${mode !== 'edit'? styles.view : ''}`}>\n          <SceneComponent setSelectedActiveObjectId={setSelectedActiveObjectId} selectedActiveObjectId={selectedActiveObjectId} stats={stats} mapitData={mapData as MapIt2Response} CENTER_ID={CENTER_ID} config={config} mode={mode} handleChangeMapitData={handleChangeMapitData}  />\n        <div className={styles.hide}>\n          <div id=\"map-special-svg-kiosk\">\n            <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n              <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-atm\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n              <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-management\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n              <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-playarea\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n              <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n              <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-family-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n              <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-elevator\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n              <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-security\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n              <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-dog-poop-station\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n              <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n              <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n              <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n              <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n              <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </MeshObjectContextProvider>\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: null;\n    controls: null;\n};\n\nexport type Settings = {\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","_path$userData","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","_floors$floor_index$r","v1","v2","_get_node_name","node1_name","exists1","push","Vector3","_floors$floor_index$r2","_get_node_name2","node2_name","addNode","_extends","addLink","weight","distanceTo","allIndexedMapObjects","allIndexedRetailers","createGraph","hex_to_color","hex_code","Color","parseInt","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterialAndGeometry","mode","_allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","geometry","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","type","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","mergeBufferGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","_mesh$mesh_type","storeName","layer_type","retailer_id","retail_name","custom_text","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","value","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","_floor$objsGroup","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","find","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","_loop","_floors$allNodesFloor2","Object","keys","key","_floors$allNodesFloor","escalator_mesh","goToFloor","direction","floor_route","_floors$floor_index","_floors$floor_index2","routePath","create_route_path","routeMeshes","create_route_paths","_floors$floor_index$o","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","loadFloors","results","GeometriesAndMaterials","result","pathIds","_result$paths$i","_getMeshParams","meshParams","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","role","Map","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","assign_route_nodes_to_stores","size","has","get","_loop2","_floors$i$escalatorsN","_floors$escalatorsNod","_floors$i$escalatorsN2","_floors$escalatorsNod2","nodeIdFrom","nodeIdTo","linkFloorEscalators","graph","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","obj_angle","rotate","rotateZ","Math","PI","scale","getImageLogo","new_object_id","mesh_center_point","handleAsync","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","onload","c","drawImage","texture","PlaneGeometry","logoMesh","storeLogo","textLogoNamePrefix","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","defaultMapObjValues","center_id","kiosk_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","BASE_URL","useMeshFloors","jsonConfig","_useState","useState","setMeshParams","_useState2","textParams","setTextParams","_useState3","storeLogos","setStoreLogos","_useState4","setPathFinderGraph","_useState5","setEscalatorNodes","_useState6","urls","setUrls","_useState7","processedConfig","setProcessedConfig","useLoader","SVGLoader","myFont","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","concat","useEffect","response","kiosks","retailers","retailer","map_objs","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","settings","parseFloat","CAMERA","camera_controls_states","CONTROLS","AMENITIES","amenities","RETAILERS","init","values","removeFromParent","textMesh","_loadFloors","TextsAndLogos","params","item","boundingBox","computeBoundingBox","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","get_store_name_logo_geo","useMemo","SceneProperties","_useThree","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","far","near","fov","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","_ref","animateRoute","useRef","_mesh$geometry$index","startTime","end","animateTube","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","log","useFrame","_jsx","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","_jsxs","children","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","jsx","uuid","htmlContent","Html","_params$geometry$boun","_params$goToFloor","_params$goToFloor2","boundingSphere","display","className","jsxs","FloorsMap","currentFloorIndex","currKioskObj","routeTargetId","amenityTargetType","zoom","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","n","traverse","route","kiosk_obj_name","amenity_type","_to_obj_name","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","selectedFloorMeshParams","meshes","currentActiveObject","focus","objs","aspectRatio","Array","isArray","target","objsBoundingBox","reduce","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","get_camera_focus_object","aspect","targetDistance","animationStartTime","cameraTime","targetTime","vector","setLength","onCameraMove","rotation","ref","_Fragment","Fragment","MapControls","onChange","maxPolarAngle","FloorButton","styles","control_btn","isActive","FloorSelector","_ref2","selectedFloorIndex","handleFloorChange","floorButtons","btn_group","ATM","xmlns","viewBox","d","transform","fill","DogPoopStation","cx","cy","rx","ry","Elevator","FamilyRestroom","Management","PlayArea","Restroom","Security","AmenityIcon","UIComponent","amenitiesList","zoomIn","zoomOut","reset","clearRoute","handleAmenityClick","preventDefault","Function","hide","backgroundColor","MapCenterMarker","kioskElementRef","React","svgClone","kioskElement","svgOrigin","cloneNode","appendChild","removeChild","MeshObjectContext","createContext","MeshObjectContextProvider","Provider","MeshObject","SetMeshObject","useMeshObjectContext","context","useContext","Error","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","MapboxForm","_formData$retailer_id","_data$retailers","_formData$kiosk_id","_data$kiosks","_Object$keys","setData","selectedId","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","formData","setFormData","setRotation","timeoutRef","startTransition","useTransition","handleChangeTab","k","updateData","findIndex","handleChange","_context$MeshObject","clearInterval","setTimeout","setX","setY","replace","Button","variant","defaultValues","Tabs","activeKey","onSelect","justify","Tab","eventKey","Form","Select","disabled","hidden","location","Row","Col","sm","Label","Control","as","rows","imageUrl","SceneComponent","_config$DEFAULT_SELEC","mapitData","url","fetch","then","json","useMapit2Data","setSelectedFloorIndex","selectedActiveObjectId","setSelectedActiveObjectId","setAmenityTargetType","setZoom","handleChangeMapitData","labelRef","currentHoveredObject","setCurrentHoveredObject","meshObjectContext","body","cursor","_useMemo","kioskError","currKioskFloorIndex","kioskMapObjName","currKioskMeshParams","flat","_meshFloors$storeLogo","currKioskLogo","handleMeshObjectContext","_meshFloors$textParam","_meshFloors$storeLogo2","logoParams","stopPropagation","targetId","meshFloorsChecked","getStyle","Canvas","intensity","top","left","padding","fontWeight","fontSize","stats","mapData","setMapData","display_app","desktop","tablet","mobile","isMapIt2Response","view","newData"],"mappings":"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"}